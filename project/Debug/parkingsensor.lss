
parkingsensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000126  00800100  000023b0  00002444  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000080  00800226  00800226  0000256a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000256a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000259c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  000025dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005a73  00000000  00000000  000027a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dc7  00000000  00000000  00008217  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002066  00000000  00000000  00008fde  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004ac  00000000  00000000  0000b044  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006fd  00000000  00000000  0000b4f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001986  00000000  00000000  0000bbed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  0000d573  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 b4 0e 	jmp	0x1d68	; 0x1d68 <__vector_1>
       8:	0c 94 77 0e 	jmp	0x1cee	; 0x1cee <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 f1 0e 	jmp	0x1de2	; 0x1de2 <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 7d 0f 	jmp	0x1efa	; 0x1efa <__vector_18>
      4c:	0c 94 ab 0f 	jmp	0x1f56	; 0x1f56 <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 eb       	ldi	r30, 0xB0	; 176
      7c:	f3 e2       	ldi	r31, 0x23	; 35
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 32       	cpi	r26, 0x26	; 38
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a6 e2       	ldi	r26, 0x26	; 38
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a6 3a       	cpi	r26, 0xA6	; 166
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <main>
      9e:	0c 94 d6 11 	jmp	0x23ac	; 0x23ac <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <GPIO_config_output>:

void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
    	*reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    	*reg_name++;				// Change pointer to Data Register
    	*reg_name = *reg_name | (1<<pin_num);  	// Data Register
      a6:	fc 01       	movw	r30, r24
      a8:	40 81       	ld	r20, Z
      aa:	21 e0       	ldi	r18, 0x01	; 1
      ac:	30 e0       	ldi	r19, 0x00	; 0
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <GPIO_config_output+0xe>
      b0:	22 0f       	add	r18, r18
      b2:	33 1f       	adc	r19, r19
      b4:	6a 95       	dec	r22
      b6:	e2 f7       	brpl	.-8      	; 0xb0 <GPIO_config_output+0xa>
      b8:	24 2b       	or	r18, r20
      ba:	20 83       	st	Z, r18
      bc:	08 95       	ret

000000be <GPIO_config_input_nopull>:
      be:	fc 01       	movw	r30, r24
      c0:	80 81       	ld	r24, Z
      c2:	21 e0       	ldi	r18, 0x01	; 1
      c4:	30 e0       	ldi	r19, 0x00	; 0
      c6:	02 c0       	rjmp	.+4      	; 0xcc <GPIO_config_input_nopull+0xe>
      c8:	22 0f       	add	r18, r18
      ca:	33 1f       	adc	r19, r19
      cc:	6a 95       	dec	r22
      ce:	e2 f7       	brpl	.-8      	; 0xc8 <GPIO_config_input_nopull+0xa>
      d0:	20 95       	com	r18
      d2:	82 23       	and	r24, r18
      d4:	80 83       	st	Z, r24
      d6:	80 81       	ld	r24, Z
      d8:	81 81       	ldd	r24, Z+1	; 0x01
      da:	28 23       	and	r18, r24
      dc:	21 83       	std	Z+1, r18	; 0x01
      de:	08 95       	ret

000000e0 <GPIO_write_low>:
}


void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
      e0:	fc 01       	movw	r30, r24
    	*reg_name = *reg_name & ~(1<<pin_num);	// Data Direction Register
      e2:	90 81       	ld	r25, Z
      e4:	21 e0       	ldi	r18, 0x01	; 1
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	02 c0       	rjmp	.+4      	; 0xee <GPIO_write_low+0xe>
      ea:	22 0f       	add	r18, r18
      ec:	33 1f       	adc	r19, r19
      ee:	6a 95       	dec	r22
      f0:	e2 f7       	brpl	.-8      	; 0xea <GPIO_write_low+0xa>
      f2:	20 95       	com	r18
      f4:	29 23       	and	r18, r25
      f6:	20 83       	st	Z, r18
      f8:	08 95       	ret

000000fa <GPIO_write_high>:
}

void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name | (1<<pin_num);	// Data Direction Register
      fa:	fc 01       	movw	r30, r24
      fc:	40 81       	ld	r20, Z
      fe:	21 e0       	ldi	r18, 0x01	; 1
     100:	30 e0       	ldi	r19, 0x00	; 0
     102:	02 c0       	rjmp	.+4      	; 0x108 <GPIO_write_high+0xe>
     104:	22 0f       	add	r18, r18
     106:	33 1f       	adc	r19, r19
     108:	6a 95       	dec	r22
     10a:	e2 f7       	brpl	.-8      	; 0x104 <GPIO_write_high+0xa>
     10c:	24 2b       	or	r18, r20
     10e:	20 83       	st	Z, r18
     110:	08 95       	ret

00000112 <GPIO_toggle>:
}

void GPIO_toggle(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name ^ (1<<pin_num);   // Data Direction Register
     112:	fc 01       	movw	r30, r24
     114:	40 81       	ld	r20, Z
     116:	21 e0       	ldi	r18, 0x01	; 1
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	02 c0       	rjmp	.+4      	; 0x120 <GPIO_toggle+0xe>
     11c:	22 0f       	add	r18, r18
     11e:	33 1f       	adc	r19, r19
     120:	6a 95       	dec	r22
     122:	e2 f7       	brpl	.-8      	; 0x11c <GPIO_toggle+0xa>
     124:	24 27       	eor	r18, r20
     126:	20 83       	st	Z, r18
     128:	08 95       	ret

0000012a <GPIO_read>:
}

uint8_t GPIO_read(volatile uint8_t *reg_name, uint8_t pin_num)
{
	if (bit_is_clear(*reg_name,pin_num))	//Check data direction register
     12a:	fc 01       	movw	r30, r24
     12c:	80 81       	ld	r24, Z
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	02 c0       	rjmp	.+4      	; 0x136 <GPIO_read+0xc>
     132:	95 95       	asr	r25
     134:	87 95       	ror	r24
     136:	6a 95       	dec	r22
     138:	e2 f7       	brpl	.-8      	; 0x132 <GPIO_read+0x8>
    	}
	else
	{
		return 1;
	}
}
     13a:	81 70       	andi	r24, 0x01	; 1
     13c:	08 95       	ret

0000013e <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) )
    {
        lcd_putc(c);
    }
}/* lcd_puts_p */
     13e:	29 9a       	sbi	0x05, 1	; 5
     140:	85 e0       	ldi	r24, 0x05	; 5
     142:	8a 95       	dec	r24
     144:	f1 f7       	brne	.-4      	; 0x142 <toggle_e+0x4>
     146:	00 00       	nop
     148:	29 98       	cbi	0x05, 1	; 5
     14a:	08 95       	ret

0000014c <lcd_write>:
     14c:	cf 93       	push	r28
     14e:	c8 2f       	mov	r28, r24
     150:	66 23       	and	r22, r22
     152:	11 f0       	breq	.+4      	; 0x158 <lcd_write+0xc>
     154:	28 9a       	sbi	0x05, 0	; 5
     156:	01 c0       	rjmp	.+2      	; 0x15a <lcd_write+0xe>
     158:	28 98       	cbi	0x05, 0	; 5
     15a:	54 9a       	sbi	0x0a, 4	; 10
     15c:	55 9a       	sbi	0x0a, 5	; 10
     15e:	56 9a       	sbi	0x0a, 6	; 10
     160:	57 9a       	sbi	0x0a, 7	; 10
     162:	5f 98       	cbi	0x0b, 7	; 11
     164:	5e 98       	cbi	0x0b, 6	; 11
     166:	5d 98       	cbi	0x0b, 5	; 11
     168:	5c 98       	cbi	0x0b, 4	; 11
     16a:	cc 23       	and	r28, r28
     16c:	0c f4       	brge	.+2      	; 0x170 <lcd_write+0x24>
     16e:	5f 9a       	sbi	0x0b, 7	; 11
     170:	c6 fd       	sbrc	r28, 6
     172:	5e 9a       	sbi	0x0b, 6	; 11
     174:	c5 fd       	sbrc	r28, 5
     176:	5d 9a       	sbi	0x0b, 5	; 11
     178:	c4 fd       	sbrc	r28, 4
     17a:	5c 9a       	sbi	0x0b, 4	; 11
     17c:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     180:	5f 98       	cbi	0x0b, 7	; 11
     182:	5e 98       	cbi	0x0b, 6	; 11
     184:	5d 98       	cbi	0x0b, 5	; 11
     186:	5c 98       	cbi	0x0b, 4	; 11
     188:	c3 fd       	sbrc	r28, 3
     18a:	5f 9a       	sbi	0x0b, 7	; 11
     18c:	c2 fd       	sbrc	r28, 2
     18e:	5e 9a       	sbi	0x0b, 6	; 11
     190:	c1 fd       	sbrc	r28, 1
     192:	5d 9a       	sbi	0x0b, 5	; 11
     194:	c0 fd       	sbrc	r28, 0
     196:	5c 9a       	sbi	0x0b, 4	; 11
     198:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     19c:	5c 9a       	sbi	0x0b, 4	; 11
     19e:	5d 9a       	sbi	0x0b, 5	; 11
     1a0:	5e 9a       	sbi	0x0b, 6	; 11
     1a2:	5f 9a       	sbi	0x0b, 7	; 11
     1a4:	87 eb       	ldi	r24, 0xB7	; 183
     1a6:	9b e0       	ldi	r25, 0x0B	; 11
     1a8:	01 97       	sbiw	r24, 0x01	; 1
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <lcd_write+0x5c>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <lcd_write+0x62>
     1ae:	00 00       	nop
     1b0:	cf 91       	pop	r28
     1b2:	08 95       	ret

000001b4 <lcd_command>:
     1b4:	60 e0       	ldi	r22, 0x00	; 0
     1b6:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
     1ba:	08 95       	ret

000001bc <lcd_data>:
     1bc:	61 e0       	ldi	r22, 0x01	; 1
     1be:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
     1c2:	08 95       	ret

000001c4 <lcd_gotoxy>:
     1c4:	61 11       	cpse	r22, r1
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <lcd_gotoxy+0xc>
     1c8:	80 58       	subi	r24, 0x80	; 128
     1ca:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
     1ce:	08 95       	ret
     1d0:	80 54       	subi	r24, 0x40	; 64
     1d2:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
     1d6:	08 95       	ret

000001d8 <lcd_clrscr>:
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
     1de:	08 95       	ret

000001e0 <lcd_putc>:
     1e0:	61 e0       	ldi	r22, 0x01	; 1
     1e2:	0e 94 a6 00 	call	0x14c	; 0x14c <lcd_write>
     1e6:	08 95       	ret

000001e8 <lcd_puts>:
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
     1ec:	ec 01       	movw	r28, r24
     1ee:	21 96       	adiw	r28, 0x01	; 1
     1f0:	fc 01       	movw	r30, r24
     1f2:	80 81       	ld	r24, Z
     1f4:	88 23       	and	r24, r24
     1f6:	29 f0       	breq	.+10     	; 0x202 <lcd_puts+0x1a>
     1f8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
     1fc:	89 91       	ld	r24, Y+
     1fe:	81 11       	cpse	r24, r1
     200:	fb cf       	rjmp	.-10     	; 0x1f8 <lcd_puts+0x10>
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <lcd_init>:
*                  LCD_DISP_ON_CURSOR      display on, cursor on
*                  LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
*  Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     208:	cf 93       	push	r28
     20a:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     20c:	20 9a       	sbi	0x04, 0	; 4
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     20e:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     210:	21 9a       	sbi	0x04, 1	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     212:	54 9a       	sbi	0x0a, 4	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     214:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     216:	56 9a       	sbi	0x0a, 6	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     218:	57 9a       	sbi	0x0a, 7	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     21a:	8f ef       	ldi	r24, 0xFF	; 255
     21c:	99 ef       	ldi	r25, 0xF9	; 249
     21e:	01 97       	sbiw	r24, 0x01	; 1
     220:	f1 f7       	brne	.-4      	; 0x21e <lcd_init+0x16>
     222:	00 c0       	rjmp	.+0      	; 0x224 <lcd_init+0x1c>
     224:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP); /* wait 16ms or more after power-on       */

    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN); // LCD_FUNCTION>>4;
     226:	5d 9a       	sbi	0x0b, 5	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN); // LCD_FUNCTION_8BIT>>4;
     228:	5c 9a       	sbi	0x0b, 4	; 11
    lcd_e_toggle();
     22a:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     22e:	8f e1       	ldi	r24, 0x1F	; 31
     230:	9e e4       	ldi	r25, 0x4E	; 78
     232:	01 97       	sbiw	r24, 0x01	; 1
     234:	f1 f7       	brne	.-4      	; 0x232 <lcd_init+0x2a>
     236:	00 c0       	rjmp	.+0      	; 0x238 <lcd_init+0x30>
     238:	00 00       	nop
    delay(LCD_DELAY_INIT); /* delay, busy flag can't be checked here */

    /* repeat last command */
    lcd_e_toggle();
     23a:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     23e:	8f ef       	ldi	r24, 0xFF	; 255
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <lcd_init+0x3a>
     246:	00 c0       	rjmp	.+0      	; 0x248 <lcd_init+0x40>
     248:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* repeat last command a third time */
    lcd_e_toggle();
     24a:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     24e:	8f ef       	ldi	r24, 0xFF	; 255
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <lcd_init+0x4a>
     256:	00 c0       	rjmp	.+0      	; 0x258 <lcd_init+0x50>
     258:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN); // LCD_FUNCTION_4BIT_1LINE>>4
     25a:	5c 98       	cbi	0x0b, 4	; 11
    lcd_e_toggle();
     25c:	0e 94 9f 00 	call	0x13e	; 0x13e <toggle_e>
     260:	8f ef       	ldi	r24, 0xFF	; 255
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <lcd_init+0x5c>
     268:	00 c0       	rjmp	.+0      	; 0x26a <lcd_init+0x62>
     26a:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
    lcd_command(KS0073_4LINES_MODE);
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
    #else
    lcd_command(LCD_FUNCTION_DEFAULT); /* function set: display lines  */
     26c:	88 e2       	ldi	r24, 0x28	; 40
     26e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    #endif
    lcd_command(LCD_DISP_OFF);     /* display off                  */
     272:	88 e0       	ldi	r24, 0x08	; 8
     274:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    lcd_clrscr();                  /* display clear                */
     278:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT); /* set entry mode               */
     27c:	86 e0       	ldi	r24, 0x06	; 6
     27e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    lcd_command(dispAttr);         /* display/cursor control       */
     282:	8c 2f       	mov	r24, r28
     284:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
}/* lcd_init */
     288:	cf 91       	pop	r28
     28a:	08 95       	ret

0000028c <Display_dist>:
#include "project_functions.h"	//library of functions for displaying outputs
#include "uart.h"				//Peter Fleury's UART library

//display distances to sensor[id]
void Display_dist(uint8_t id,volatile float dist[], char string[])
{
     28c:	ef 92       	push	r14
     28e:	ff 92       	push	r15
     290:	1f 93       	push	r17
     292:	cf 93       	push	r28
     294:	df 93       	push	r29
     296:	18 2f       	mov	r17, r24
     298:	7a 01       	movw	r14, r20
	if (dist[id]<10)
     29a:	eb 01       	movw	r28, r22
     29c:	84 e0       	ldi	r24, 0x04	; 4
     29e:	18 9f       	mul	r17, r24
     2a0:	c0 0d       	add	r28, r0
     2a2:	d1 1d       	adc	r29, r1
     2a4:	11 24       	eor	r1, r1
     2a6:	68 81       	ld	r22, Y
     2a8:	79 81       	ldd	r23, Y+1	; 0x01
     2aa:	8a 81       	ldd	r24, Y+2	; 0x02
     2ac:	9b 81       	ldd	r25, Y+3	; 0x03
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	40 e2       	ldi	r20, 0x20	; 32
     2b4:	51 e4       	ldi	r21, 0x41	; 65
     2b6:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__cmpsf2>
     2ba:	88 23       	and	r24, r24
     2bc:	6c f4       	brge	.+26     	; 0x2d8 <Display_dist+0x4c>
	{
		lcd_gotoxy(14,id);		//set position to hundrets
     2be:	61 2f       	mov	r22, r17
     2c0:	8e e0       	ldi	r24, 0x0E	; 14
     2c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("  ");			//clear hundrets and tenths
     2c6:	8a e0       	ldi	r24, 0x0A	; 10
     2c8:	92 e0       	ldi	r25, 0x02	; 2
     2ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
		lcd_gotoxy(16, id);		//go to ones
     2ce:	61 2f       	mov	r22, r17
     2d0:	80 e1       	ldi	r24, 0x10	; 16
     2d2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
     2d6:	29 c0       	rjmp	.+82     	; 0x32a <Display_dist+0x9e>
	}
	
	else if (dist[id]>=10 && dist[id]<100)
     2d8:	68 81       	ld	r22, Y
     2da:	79 81       	ldd	r23, Y+1	; 0x01
     2dc:	8a 81       	ldd	r24, Y+2	; 0x02
     2de:	9b 81       	ldd	r25, Y+3	; 0x03
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	40 e2       	ldi	r20, 0x20	; 32
     2e6:	51 e4       	ldi	r21, 0x41	; 65
     2e8:	0e 94 2f 11 	call	0x225e	; 0x225e <__gesf2>
     2ec:	88 23       	and	r24, r24
     2ee:	cc f0       	brlt	.+50     	; 0x322 <Display_dist+0x96>
     2f0:	68 81       	ld	r22, Y
     2f2:	79 81       	ldd	r23, Y+1	; 0x01
     2f4:	8a 81       	ldd	r24, Y+2	; 0x02
     2f6:	9b 81       	ldd	r25, Y+3	; 0x03
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	48 ec       	ldi	r20, 0xC8	; 200
     2fe:	52 e4       	ldi	r21, 0x42	; 66
     300:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__cmpsf2>
     304:	88 23       	and	r24, r24
     306:	6c f4       	brge	.+26     	; 0x322 <Display_dist+0x96>
	{
		lcd_gotoxy(14,id);		//set position to hundrets
     308:	61 2f       	mov	r22, r17
     30a:	8e e0       	ldi	r24, 0x0E	; 14
     30c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts(" ");			//clear hundrets
     310:	8b e0       	ldi	r24, 0x0B	; 11
     312:	92 e0       	ldi	r25, 0x02	; 2
     314:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
		lcd_gotoxy(15, id);		//set position to tenths
     318:	61 2f       	mov	r22, r17
     31a:	8f e0       	ldi	r24, 0x0F	; 15
     31c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
     320:	04 c0       	rjmp	.+8      	; 0x32a <Display_dist+0x9e>
	}
	else
	{
		lcd_gotoxy(14, id);		//set position to hundrets
     322:	61 2f       	mov	r22, r17
     324:	8e e0       	ldi	r24, 0x0E	; 14
     326:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
	}
	lcd_puts(string);			//display distance on lcd
     32a:	c7 01       	movw	r24, r14
     32c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
}
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	08 95       	ret

0000033c <Update_warning>:

//update warning message based on smaller distance
void Update_warning(int sm_dist)
{	
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
     340:	ec 01       	movw	r28, r24
	LEDs_off();
     342:	0e 94 34 0d 	call	0x1a68	; 0x1a68 <LEDs_off>

	if (sm_dist>=400)
     346:	c0 39       	cpi	r28, 0x90	; 144
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	d8 07       	cpc	r29, r24
     34c:	6c f0       	brlt	.+26     	; 0x368 <Update_warning+0x2c>
	{
		LED_toggle(5);
     34e:	85 e0       	ldi	r24, 0x05	; 5
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <LED_toggle>
		lcd_gotoxy(22, 2);
     356:	62 e0       	ldi	r22, 0x02	; 2
     358:	86 e1       	ldi	r24, 0x16	; 22
     35a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("OUTSIDE OF RANGE!");
     35e:	80 e3       	ldi	r24, 0x30	; 48
     360:	91 e0       	ldi	r25, 0x01	; 1
     362:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     366:	5f c0       	rjmp	.+190    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	}

	else if (sm_dist <= 400 && sm_dist > 200)
     368:	ce 01       	movw	r24, r28
     36a:	89 5c       	subi	r24, 0xC9	; 201
     36c:	91 09       	sbc	r25, r1
     36e:	88 3c       	cpi	r24, 0xC8	; 200
     370:	91 05       	cpc	r25, r1
     372:	68 f4       	brcc	.+26     	; 0x38e <Update_warning+0x52>
	{
		LED_toggle(4);
     374:	84 e0       	ldi	r24, 0x04	; 4
     376:	90 e0       	ldi	r25, 0x00	; 0
     378:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <LED_toggle>
		lcd_gotoxy(22, 2);
     37c:	62 e0       	ldi	r22, 0x02	; 2
     37e:	86 e1       	ldi	r24, 0x16	; 22
     380:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("    ALL CLEAR!    ");
     384:	82 e4       	ldi	r24, 0x42	; 66
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     38c:	4c c0       	rjmp	.+152    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	}
	else if (sm_dist <= 200 && sm_dist > 100)
     38e:	ce 01       	movw	r24, r28
     390:	85 56       	subi	r24, 0x65	; 101
     392:	91 09       	sbc	r25, r1
     394:	84 36       	cpi	r24, 0x64	; 100
     396:	91 05       	cpc	r25, r1
     398:	68 f4       	brcc	.+26     	; 0x3b4 <Update_warning+0x78>
	{
		LED_toggle(3);
     39a:	83 e0       	ldi	r24, 0x03	; 3
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <LED_toggle>
		lcd_gotoxy(22, 2);
     3a2:	62 e0       	ldi	r22, 0x02	; 2
     3a4:	86 e1       	ldi	r24, 0x16	; 22
     3a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("    PRIHORIVA!   ");
     3aa:	85 e5       	ldi	r24, 0x55	; 85
     3ac:	91 e0       	ldi	r25, 0x01	; 1
     3ae:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     3b2:	39 c0       	rjmp	.+114    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	}

	else if (sm_dist <= 100 && sm_dist > 50)
     3b4:	ce 01       	movw	r24, r28
     3b6:	c3 97       	sbiw	r24, 0x33	; 51
     3b8:	c2 97       	sbiw	r24, 0x32	; 50
     3ba:	68 f4       	brcc	.+26     	; 0x3d6 <Update_warning+0x9a>
	{
		LED_toggle(2);
     3bc:	82 e0       	ldi	r24, 0x02	; 2
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <LED_toggle>
		lcd_gotoxy(22, 2);
     3c4:	62 e0       	ldi	r22, 0x02	; 2
     3c6:	86 e1       	ldi	r24, 0x16	; 22
     3c8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("    !!SLOW!!     ");
     3cc:	87 e6       	ldi	r24, 0x67	; 103
     3ce:	91 e0       	ldi	r25, 0x01	; 1
     3d0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     3d4:	28 c0       	rjmp	.+80     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	}
	else if (sm_dist <= 50 && sm_dist>10 )
     3d6:	ce 01       	movw	r24, r28
     3d8:	0b 97       	sbiw	r24, 0x0b	; 11
     3da:	88 97       	sbiw	r24, 0x28	; 40
     3dc:	68 f4       	brcc	.+26     	; 0x3f8 <Update_warning+0xbc>
	{
		LED_toggle(1);
     3de:	81 e0       	ldi	r24, 0x01	; 1
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	0e 94 4e 0d 	call	0x1a9c	; 0x1a9c <LED_toggle>
		lcd_gotoxy(22, 2);
     3e6:	62 e0       	ldi	r22, 0x02	; 2
     3e8:	86 e1       	ldi	r24, 0x16	; 22
     3ea:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("   !!STOP!!      ");
     3ee:	89 e7       	ldi	r24, 0x79	; 121
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     3f6:	17 c0       	rjmp	.+46     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	}
	else if (sm_dist <= 10 && sm_dist > 2 )
     3f8:	ce 01       	movw	r24, r28
     3fa:	03 97       	sbiw	r24, 0x03	; 3
     3fc:	08 97       	sbiw	r24, 0x08	; 8
     3fe:	48 f4       	brcc	.+18     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
	{
		lcd_gotoxy(22, 2); 
     400:	62 e0       	ldi	r22, 0x02	; 2
     402:	86 e1       	ldi	r24, 0x16	; 22
     404:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("   !!STOP!!      ");
     408:	89 e7       	ldi	r24, 0x79	; 121
     40a:	91 e0       	ldi	r25, 0x01	; 1
     40c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     410:	0a c0       	rjmp	.+20     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	}
	else if (sm_dist <= 2)
     412:	23 97       	sbiw	r28, 0x03	; 3
     414:	44 f4       	brge	.+16     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
	{
		lcd_gotoxy(22, 2);
     416:	62 e0       	ldi	r22, 0x02	; 2
     418:	86 e1       	ldi	r24, 0x16	; 22
     41a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("     <2cm        ");	
     41e:	8b e8       	ldi	r24, 0x8B	; 139
     420:	91 e0       	ldi	r25, 0x01	; 1
     422:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
	}
}
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	08 95       	ret

0000042c <Uart_info>:

//display info about obstacles in front/back/both (range 1m)
void Uart_info(volatile float dist[])
{
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	ec 01       	movw	r28, r24
	if (dist[0]<100 && dist[1]<100)
     432:	68 81       	ld	r22, Y
     434:	79 81       	ldd	r23, Y+1	; 0x01
     436:	8a 81       	ldd	r24, Y+2	; 0x02
     438:	9b 81       	ldd	r25, Y+3	; 0x03
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	48 ec       	ldi	r20, 0xC8	; 200
     440:	52 e4       	ldi	r21, 0x42	; 66
     442:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__cmpsf2>
     446:	88 23       	and	r24, r24
     448:	8c f4       	brge	.+34     	; 0x46c <Uart_info+0x40>
     44a:	6c 81       	ldd	r22, Y+4	; 0x04
     44c:	7d 81       	ldd	r23, Y+5	; 0x05
     44e:	8e 81       	ldd	r24, Y+6	; 0x06
     450:	9f 81       	ldd	r25, Y+7	; 0x07
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	48 ec       	ldi	r20, 0xC8	; 200
     458:	52 e4       	ldi	r21, 0x42	; 66
     45a:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__cmpsf2>
     45e:	88 23       	and	r24, r24
     460:	2c f4       	brge	.+10     	; 0x46c <Uart_info+0x40>
	{
		uart_puts("Obstacles in front and back!\n");
     462:	8d e9       	ldi	r24, 0x9D	; 157
     464:	91 e0       	ldi	r25, 0x01	; 1
     466:	0e 94 03 10 	call	0x2006	; 0x2006 <uart_puts>
     46a:	26 c0       	rjmp	.+76     	; 0x4b8 <Uart_info+0x8c>
	}
	else if (dist[0]<100)
     46c:	68 81       	ld	r22, Y
     46e:	79 81       	ldd	r23, Y+1	; 0x01
     470:	8a 81       	ldd	r24, Y+2	; 0x02
     472:	9b 81       	ldd	r25, Y+3	; 0x03
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	48 ec       	ldi	r20, 0xC8	; 200
     47a:	52 e4       	ldi	r21, 0x42	; 66
     47c:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__cmpsf2>
     480:	88 23       	and	r24, r24
     482:	2c f4       	brge	.+10     	; 0x48e <Uart_info+0x62>
	{
		uart_puts("Obstacle in front!\n");
     484:	8b eb       	ldi	r24, 0xBB	; 187
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	0e 94 03 10 	call	0x2006	; 0x2006 <uart_puts>
     48c:	15 c0       	rjmp	.+42     	; 0x4b8 <Uart_info+0x8c>
	}
	else if (dist[1]<100)
     48e:	6c 81       	ldd	r22, Y+4	; 0x04
     490:	7d 81       	ldd	r23, Y+5	; 0x05
     492:	8e 81       	ldd	r24, Y+6	; 0x06
     494:	9f 81       	ldd	r25, Y+7	; 0x07
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	48 ec       	ldi	r20, 0xC8	; 200
     49c:	52 e4       	ldi	r21, 0x42	; 66
     49e:	0e 94 7f 10 	call	0x20fe	; 0x20fe <__cmpsf2>
     4a2:	88 23       	and	r24, r24
     4a4:	2c f4       	brge	.+10     	; 0x4b0 <Uart_info+0x84>
	{
		uart_puts("Obstacle in back!\n");
     4a6:	8f ec       	ldi	r24, 0xCF	; 207
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	0e 94 03 10 	call	0x2006	; 0x2006 <uart_puts>
     4ae:	04 c0       	rjmp	.+8      	; 0x4b8 <Uart_info+0x8c>
	}
	else
	{
		uart_puts("No obstacle nearby!\n");
     4b0:	82 ee       	ldi	r24, 0xE2	; 226
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	0e 94 03 10 	call	0x2006	; 0x2006 <uart_puts>
	}
}
     4b8:	df 91       	pop	r29
     4ba:	cf 91       	pop	r28
     4bc:	08 95       	ret

000004be <Load_bar>:

//displays bar on lcd based on the smaller distance
void Load_bar(int distance)
{
	if (distance>480)
     4be:	81 3e       	cpi	r24, 0xE1	; 225
     4c0:	21 e0       	ldi	r18, 0x01	; 1
     4c2:	92 07       	cpc	r25, r18
     4c4:	4c f0       	brlt	.+18     	; 0x4d8 <Load_bar+0x1a>
	{
		lcd_gotoxy(20,0);
     4c6:	60 e0       	ldi	r22, 0x00	; 0
     4c8:	84 e1       	ldi	r24, 0x14	; 20
     4ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                     ");
     4ce:	87 ef       	ldi	r24, 0xF7	; 247
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     4d6:	08 95       	ret
	}
	else if (distance<=480 && distance>470)
     4d8:	9c 01       	movw	r18, r24
     4da:	27 5d       	subi	r18, 0xD7	; 215
     4dc:	31 40       	sbci	r19, 0x01	; 1
     4de:	2a 30       	cpi	r18, 0x0A	; 10
     4e0:	31 05       	cpc	r19, r1
     4e2:	80 f4       	brcc	.+32     	; 0x504 <Load_bar+0x46>
	{
		lcd_gotoxy(20,0);
     4e4:	60 e0       	ldi	r22, 0x00	; 0
     4e6:	84 e1       	ldi	r24, 0x14	; 20
     4e8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     4ec:	83 e0       	ldi	r24, 0x03	; 3
     4ee:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	85 e1       	ldi	r24, 0x15	; 21
     4f6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     4fa:	88 ef       	ldi	r24, 0xF8	; 248
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     502:	08 95       	ret
	}
	else if (distance<=470 && distance>460)
     504:	9c 01       	movw	r18, r24
     506:	2d 5c       	subi	r18, 0xCD	; 205
     508:	31 40       	sbci	r19, 0x01	; 1
     50a:	2a 30       	cpi	r18, 0x0A	; 10
     50c:	31 05       	cpc	r19, r1
     50e:	80 f4       	brcc	.+32     	; 0x530 <Load_bar+0x72>
	{
		lcd_gotoxy(20,0);
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	84 e1       	ldi	r24, 0x14	; 20
     514:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     518:	84 e0       	ldi	r24, 0x04	; 4
     51a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	85 e1       	ldi	r24, 0x15	; 21
     522:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     526:	88 ef       	ldi	r24, 0xF8	; 248
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     52e:	08 95       	ret
	}
	else if (distance<=460 && distance>450)
     530:	9c 01       	movw	r18, r24
     532:	23 5c       	subi	r18, 0xC3	; 195
     534:	31 40       	sbci	r19, 0x01	; 1
     536:	2a 30       	cpi	r18, 0x0A	; 10
     538:	31 05       	cpc	r19, r1
     53a:	80 f4       	brcc	.+32     	; 0x55c <Load_bar+0x9e>
	{
		lcd_gotoxy(20,0);
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	84 e1       	ldi	r24, 0x14	; 20
     540:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     544:	85 e0       	ldi	r24, 0x05	; 5
     546:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     54a:	60 e0       	ldi	r22, 0x00	; 0
     54c:	85 e1       	ldi	r24, 0x15	; 21
     54e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                    ");
     552:	88 ef       	ldi	r24, 0xF8	; 248
     554:	91 e0       	ldi	r25, 0x01	; 1
     556:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     55a:	08 95       	ret
		lcd_gotoxy(21,0);
		lcd_putc(1);
		lcd_gotoxy(22,0);
		lcd_puts("                   ");
	}
	else if (distance<=450 && distance>440)
     55c:	9c 01       	movw	r18, r24
     55e:	29 5b       	subi	r18, 0xB9	; 185
     560:	31 40       	sbci	r19, 0x01	; 1
     562:	2a 30       	cpi	r18, 0x0A	; 10
     564:	31 05       	cpc	r19, r1
     566:	b8 f4       	brcc	.+46     	; 0x596 <Load_bar+0xd8>
	{
		lcd_gotoxy(20,0);
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	84 e1       	ldi	r24, 0x14	; 20
     56c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     570:	85 e0       	ldi	r24, 0x05	; 5
     572:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     576:	60 e0       	ldi	r22, 0x00	; 0
     578:	85 e1       	ldi	r24, 0x15	; 21
     57a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     57e:	82 e0       	ldi	r24, 0x02	; 2
     580:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	86 e1       	ldi	r24, 0x16	; 22
     588:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     58c:	89 ef       	ldi	r24, 0xF9	; 249
     58e:	91 e0       	ldi	r25, 0x01	; 1
     590:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     594:	08 95       	ret
	}
	else if (distance<=440 && distance>430)
     596:	9c 01       	movw	r18, r24
     598:	2f 5a       	subi	r18, 0xAF	; 175
     59a:	31 40       	sbci	r19, 0x01	; 1
     59c:	2a 30       	cpi	r18, 0x0A	; 10
     59e:	31 05       	cpc	r19, r1
     5a0:	b8 f4       	brcc	.+46     	; 0x5d0 <Load_bar+0x112>
	{
		lcd_gotoxy(20,0);
     5a2:	60 e0       	ldi	r22, 0x00	; 0
     5a4:	84 e1       	ldi	r24, 0x14	; 20
     5a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     5aa:	85 e0       	ldi	r24, 0x05	; 5
     5ac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     5b0:	60 e0       	ldi	r22, 0x00	; 0
     5b2:	85 e1       	ldi	r24, 0x15	; 21
     5b4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     5b8:	83 e0       	ldi	r24, 0x03	; 3
     5ba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	86 e1       	ldi	r24, 0x16	; 22
     5c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     5c6:	89 ef       	ldi	r24, 0xF9	; 249
     5c8:	91 e0       	ldi	r25, 0x01	; 1
     5ca:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     5ce:	08 95       	ret
	}
	else if (distance<=430 && distance>420)
     5d0:	9c 01       	movw	r18, r24
     5d2:	25 5a       	subi	r18, 0xA5	; 165
     5d4:	31 40       	sbci	r19, 0x01	; 1
     5d6:	2a 30       	cpi	r18, 0x0A	; 10
     5d8:	31 05       	cpc	r19, r1
     5da:	b8 f4       	brcc	.+46     	; 0x60a <Load_bar+0x14c>
	{
		lcd_gotoxy(20,0);
     5dc:	60 e0       	ldi	r22, 0x00	; 0
     5de:	84 e1       	ldi	r24, 0x14	; 20
     5e0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     5e4:	85 e0       	ldi	r24, 0x05	; 5
     5e6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     5ea:	60 e0       	ldi	r22, 0x00	; 0
     5ec:	85 e1       	ldi	r24, 0x15	; 21
     5ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     5f2:	84 e0       	ldi	r24, 0x04	; 4
     5f4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	86 e1       	ldi	r24, 0x16	; 22
     5fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     600:	89 ef       	ldi	r24, 0xF9	; 249
     602:	91 e0       	ldi	r25, 0x01	; 1
     604:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     608:	08 95       	ret
	}
	else if (distance<=420 && distance>410)
     60a:	9c 01       	movw	r18, r24
     60c:	2b 59       	subi	r18, 0x9B	; 155
     60e:	31 40       	sbci	r19, 0x01	; 1
     610:	2a 30       	cpi	r18, 0x0A	; 10
     612:	31 05       	cpc	r19, r1
     614:	b8 f4       	brcc	.+46     	; 0x644 <Load_bar+0x186>
	{
		lcd_gotoxy(20,0);
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	84 e1       	ldi	r24, 0x14	; 20
     61a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     61e:	85 e0       	ldi	r24, 0x05	; 5
     620:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	85 e1       	ldi	r24, 0x15	; 21
     628:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     62c:	85 e0       	ldi	r24, 0x05	; 5
     62e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	86 e1       	ldi	r24, 0x16	; 22
     636:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                   ");
     63a:	89 ef       	ldi	r24, 0xF9	; 249
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     642:	08 95       	ret
	}
	else if (distance<=410 && distance>400)
     644:	9c 01       	movw	r18, r24
     646:	21 59       	subi	r18, 0x91	; 145
     648:	31 40       	sbci	r19, 0x01	; 1
     64a:	2a 30       	cpi	r18, 0x0A	; 10
     64c:	31 05       	cpc	r19, r1
     64e:	f0 f4       	brcc	.+60     	; 0x68c <Load_bar+0x1ce>
	{
		lcd_gotoxy(20,0);
     650:	60 e0       	ldi	r22, 0x00	; 0
     652:	84 e1       	ldi	r24, 0x14	; 20
     654:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     658:	85 e0       	ldi	r24, 0x05	; 5
     65a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     65e:	60 e0       	ldi	r22, 0x00	; 0
     660:	85 e1       	ldi	r24, 0x15	; 21
     662:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     666:	85 e0       	ldi	r24, 0x05	; 5
     668:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     66c:	60 e0       	ldi	r22, 0x00	; 0
     66e:	86 e1       	ldi	r24, 0x16	; 22
     670:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     67a:	60 e0       	ldi	r22, 0x00	; 0
     67c:	87 e1       	ldi	r24, 0x17	; 23
     67e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     682:	8a ef       	ldi	r24, 0xFA	; 250
     684:	91 e0       	ldi	r25, 0x01	; 1
     686:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     68a:	08 95       	ret
	}
	else if (distance<=400 && distance>390)
     68c:	9c 01       	movw	r18, r24
     68e:	27 58       	subi	r18, 0x87	; 135
     690:	31 40       	sbci	r19, 0x01	; 1
     692:	2a 30       	cpi	r18, 0x0A	; 10
     694:	31 05       	cpc	r19, r1
     696:	f0 f4       	brcc	.+60     	; 0x6d4 <Load_bar+0x216>
	{
		lcd_gotoxy(20,0);
     698:	60 e0       	ldi	r22, 0x00	; 0
     69a:	84 e1       	ldi	r24, 0x14	; 20
     69c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     6a0:	85 e0       	ldi	r24, 0x05	; 5
     6a2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     6a6:	60 e0       	ldi	r22, 0x00	; 0
     6a8:	85 e1       	ldi	r24, 0x15	; 21
     6aa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     6ae:	85 e0       	ldi	r24, 0x05	; 5
     6b0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     6b4:	60 e0       	ldi	r22, 0x00	; 0
     6b6:	86 e1       	ldi	r24, 0x16	; 22
     6b8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     6bc:	82 e0       	ldi	r24, 0x02	; 2
     6be:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	87 e1       	ldi	r24, 0x17	; 23
     6c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     6ca:	8a ef       	ldi	r24, 0xFA	; 250
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     6d2:	08 95       	ret
	}
	else if (distance<=390 && distance>=380)
     6d4:	9c 01       	movw	r18, r24
     6d6:	2c 57       	subi	r18, 0x7C	; 124
     6d8:	31 40       	sbci	r19, 0x01	; 1
     6da:	2b 30       	cpi	r18, 0x0B	; 11
     6dc:	31 05       	cpc	r19, r1
     6de:	f0 f4       	brcc	.+60     	; 0x71c <Load_bar+0x25e>
	{
		lcd_gotoxy(20,0);
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	84 e1       	ldi	r24, 0x14	; 20
     6e4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     6e8:	85 e0       	ldi	r24, 0x05	; 5
     6ea:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     6ee:	60 e0       	ldi	r22, 0x00	; 0
     6f0:	85 e1       	ldi	r24, 0x15	; 21
     6f2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     6f6:	85 e0       	ldi	r24, 0x05	; 5
     6f8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	86 e1       	ldi	r24, 0x16	; 22
     700:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     704:	83 e0       	ldi	r24, 0x03	; 3
     706:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	87 e1       	ldi	r24, 0x17	; 23
     70e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     712:	8a ef       	ldi	r24, 0xFA	; 250
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     71a:	08 95       	ret
	}
	else if (distance<=380 && distance>370)
     71c:	9c 01       	movw	r18, r24
     71e:	23 57       	subi	r18, 0x73	; 115
     720:	31 40       	sbci	r19, 0x01	; 1
     722:	2a 30       	cpi	r18, 0x0A	; 10
     724:	31 05       	cpc	r19, r1
     726:	f0 f4       	brcc	.+60     	; 0x764 <Load_bar+0x2a6>
	{
		lcd_gotoxy(20,0);
     728:	60 e0       	ldi	r22, 0x00	; 0
     72a:	84 e1       	ldi	r24, 0x14	; 20
     72c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     730:	85 e0       	ldi	r24, 0x05	; 5
     732:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     736:	60 e0       	ldi	r22, 0x00	; 0
     738:	85 e1       	ldi	r24, 0x15	; 21
     73a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     73e:	85 e0       	ldi	r24, 0x05	; 5
     740:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     744:	60 e0       	ldi	r22, 0x00	; 0
     746:	86 e1       	ldi	r24, 0x16	; 22
     748:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     74c:	84 e0       	ldi	r24, 0x04	; 4
     74e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	87 e1       	ldi	r24, 0x17	; 23
     756:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     75a:	8a ef       	ldi	r24, 0xFA	; 250
     75c:	91 e0       	ldi	r25, 0x01	; 1
     75e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     762:	08 95       	ret
	}
	else if (distance<=370 && distance>360)
     764:	9c 01       	movw	r18, r24
     766:	29 56       	subi	r18, 0x69	; 105
     768:	31 40       	sbci	r19, 0x01	; 1
     76a:	2a 30       	cpi	r18, 0x0A	; 10
     76c:	31 05       	cpc	r19, r1
     76e:	f0 f4       	brcc	.+60     	; 0x7ac <Load_bar+0x2ee>
	{
		lcd_gotoxy(20,0);
     770:	60 e0       	ldi	r22, 0x00	; 0
     772:	84 e1       	ldi	r24, 0x14	; 20
     774:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     778:	85 e0       	ldi	r24, 0x05	; 5
     77a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	85 e1       	ldi	r24, 0x15	; 21
     782:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     786:	85 e0       	ldi	r24, 0x05	; 5
     788:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	86 e1       	ldi	r24, 0x16	; 22
     790:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     794:	85 e0       	ldi	r24, 0x05	; 5
     796:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	87 e1       	ldi	r24, 0x17	; 23
     79e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                  ");
     7a2:	8a ef       	ldi	r24, 0xFA	; 250
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     7aa:	08 95       	ret
	}
	else if (distance<=360 && distance>350)
     7ac:	9c 01       	movw	r18, r24
     7ae:	2f 55       	subi	r18, 0x5F	; 95
     7b0:	31 40       	sbci	r19, 0x01	; 1
     7b2:	2a 30       	cpi	r18, 0x0A	; 10
     7b4:	31 05       	cpc	r19, r1
     7b6:	28 f5       	brcc	.+74     	; 0x802 <Load_bar+0x344>
	{
		lcd_gotoxy(20,0);
     7b8:	60 e0       	ldi	r22, 0x00	; 0
     7ba:	84 e1       	ldi	r24, 0x14	; 20
     7bc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     7c0:	85 e0       	ldi	r24, 0x05	; 5
     7c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     7c6:	60 e0       	ldi	r22, 0x00	; 0
     7c8:	85 e1       	ldi	r24, 0x15	; 21
     7ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     7ce:	85 e0       	ldi	r24, 0x05	; 5
     7d0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     7d4:	60 e0       	ldi	r22, 0x00	; 0
     7d6:	86 e1       	ldi	r24, 0x16	; 22
     7d8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     7dc:	85 e0       	ldi	r24, 0x05	; 5
     7de:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	87 e1       	ldi	r24, 0x17	; 23
     7e6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     7f0:	60 e0       	ldi	r22, 0x00	; 0
     7f2:	88 e1       	ldi	r24, 0x18	; 24
     7f4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     7f8:	8b ef       	ldi	r24, 0xFB	; 251
     7fa:	91 e0       	ldi	r25, 0x01	; 1
     7fc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     800:	08 95       	ret
	}
	else if (distance<=350 && distance>340)
     802:	9c 01       	movw	r18, r24
     804:	25 55       	subi	r18, 0x55	; 85
     806:	31 40       	sbci	r19, 0x01	; 1
     808:	2a 30       	cpi	r18, 0x0A	; 10
     80a:	31 05       	cpc	r19, r1
     80c:	28 f5       	brcc	.+74     	; 0x858 <Load_bar+0x39a>
	{
		lcd_gotoxy(20,0);
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	84 e1       	ldi	r24, 0x14	; 20
     812:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     816:	85 e0       	ldi	r24, 0x05	; 5
     818:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     81c:	60 e0       	ldi	r22, 0x00	; 0
     81e:	85 e1       	ldi	r24, 0x15	; 21
     820:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     824:	85 e0       	ldi	r24, 0x05	; 5
     826:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     82a:	60 e0       	ldi	r22, 0x00	; 0
     82c:	86 e1       	ldi	r24, 0x16	; 22
     82e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     832:	85 e0       	ldi	r24, 0x05	; 5
     834:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     838:	60 e0       	ldi	r22, 0x00	; 0
     83a:	87 e1       	ldi	r24, 0x17	; 23
     83c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     840:	82 e0       	ldi	r24, 0x02	; 2
     842:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	88 e1       	ldi	r24, 0x18	; 24
     84a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     84e:	8b ef       	ldi	r24, 0xFB	; 251
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     856:	08 95       	ret
	}
	else if (distance<=340 && distance>330)
     858:	9c 01       	movw	r18, r24
     85a:	2b 54       	subi	r18, 0x4B	; 75
     85c:	31 40       	sbci	r19, 0x01	; 1
     85e:	2a 30       	cpi	r18, 0x0A	; 10
     860:	31 05       	cpc	r19, r1
     862:	28 f5       	brcc	.+74     	; 0x8ae <Load_bar+0x3f0>
	{
		lcd_gotoxy(20,0);
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	84 e1       	ldi	r24, 0x14	; 20
     868:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     86c:	85 e0       	ldi	r24, 0x05	; 5
     86e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	85 e1       	ldi	r24, 0x15	; 21
     876:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     87a:	85 e0       	ldi	r24, 0x05	; 5
     87c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     880:	60 e0       	ldi	r22, 0x00	; 0
     882:	86 e1       	ldi	r24, 0x16	; 22
     884:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     888:	85 e0       	ldi	r24, 0x05	; 5
     88a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	87 e1       	ldi	r24, 0x17	; 23
     892:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     896:	83 e0       	ldi	r24, 0x03	; 3
     898:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	88 e1       	ldi	r24, 0x18	; 24
     8a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     8a4:	8b ef       	ldi	r24, 0xFB	; 251
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     8ac:	08 95       	ret
	}
	else if (distance<=330 && distance>320)
     8ae:	9c 01       	movw	r18, r24
     8b0:	21 54       	subi	r18, 0x41	; 65
     8b2:	31 40       	sbci	r19, 0x01	; 1
     8b4:	2a 30       	cpi	r18, 0x0A	; 10
     8b6:	31 05       	cpc	r19, r1
     8b8:	28 f5       	brcc	.+74     	; 0x904 <__stack+0x5>
	{
		lcd_gotoxy(20,0);
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	84 e1       	ldi	r24, 0x14	; 20
     8be:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8c2:	85 e0       	ldi	r24, 0x05	; 5
     8c4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     8c8:	60 e0       	ldi	r22, 0x00	; 0
     8ca:	85 e1       	ldi	r24, 0x15	; 21
     8cc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8d0:	85 e0       	ldi	r24, 0x05	; 5
     8d2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     8d6:	60 e0       	ldi	r22, 0x00	; 0
     8d8:	86 e1       	ldi	r24, 0x16	; 22
     8da:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     8de:	85 e0       	ldi	r24, 0x05	; 5
     8e0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	87 e1       	ldi	r24, 0x17	; 23
     8e8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     8ec:	84 e0       	ldi	r24, 0x04	; 4
     8ee:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     8f2:	60 e0       	ldi	r22, 0x00	; 0
     8f4:	88 e1       	ldi	r24, 0x18	; 24
     8f6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     8fa:	8b ef       	ldi	r24, 0xFB	; 251
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     902:	08 95       	ret
	}
	else if (distance<=320 && distance>310)
     904:	9c 01       	movw	r18, r24
     906:	27 53       	subi	r18, 0x37	; 55
     908:	31 40       	sbci	r19, 0x01	; 1
     90a:	2a 30       	cpi	r18, 0x0A	; 10
     90c:	31 05       	cpc	r19, r1
     90e:	28 f5       	brcc	.+74     	; 0x95a <__stack+0x5b>
	{
		lcd_gotoxy(20,0);
     910:	60 e0       	ldi	r22, 0x00	; 0
     912:	84 e1       	ldi	r24, 0x14	; 20
     914:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     918:	85 e0       	ldi	r24, 0x05	; 5
     91a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	85 e1       	ldi	r24, 0x15	; 21
     922:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     926:	85 e0       	ldi	r24, 0x05	; 5
     928:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	86 e1       	ldi	r24, 0x16	; 22
     930:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     934:	85 e0       	ldi	r24, 0x05	; 5
     936:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     93a:	60 e0       	ldi	r22, 0x00	; 0
     93c:	87 e1       	ldi	r24, 0x17	; 23
     93e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     942:	85 e0       	ldi	r24, 0x05	; 5
     944:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     948:	60 e0       	ldi	r22, 0x00	; 0
     94a:	88 e1       	ldi	r24, 0x18	; 24
     94c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                 ");
     950:	8b ef       	ldi	r24, 0xFB	; 251
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     958:	08 95       	ret
	}
	else if (distance<=310 && distance>300)
     95a:	9c 01       	movw	r18, r24
     95c:	2d 52       	subi	r18, 0x2D	; 45
     95e:	31 40       	sbci	r19, 0x01	; 1
     960:	2a 30       	cpi	r18, 0x0A	; 10
     962:	31 05       	cpc	r19, r1
     964:	60 f5       	brcc	.+88     	; 0x9be <__stack+0xbf>
	{
		lcd_gotoxy(20,0);
     966:	60 e0       	ldi	r22, 0x00	; 0
     968:	84 e1       	ldi	r24, 0x14	; 20
     96a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     96e:	85 e0       	ldi	r24, 0x05	; 5
     970:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     974:	60 e0       	ldi	r22, 0x00	; 0
     976:	85 e1       	ldi	r24, 0x15	; 21
     978:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     97c:	85 e0       	ldi	r24, 0x05	; 5
     97e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     982:	60 e0       	ldi	r22, 0x00	; 0
     984:	86 e1       	ldi	r24, 0x16	; 22
     986:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     98a:	85 e0       	ldi	r24, 0x05	; 5
     98c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	87 e1       	ldi	r24, 0x17	; 23
     994:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     998:	85 e0       	ldi	r24, 0x05	; 5
     99a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     99e:	60 e0       	ldi	r22, 0x00	; 0
     9a0:	88 e1       	ldi	r24, 0x18	; 24
     9a2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     9a6:	81 e0       	ldi	r24, 0x01	; 1
     9a8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     9ac:	60 e0       	ldi	r22, 0x00	; 0
     9ae:	89 e1       	ldi	r24, 0x19	; 25
     9b0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     9b4:	8c ef       	ldi	r24, 0xFC	; 252
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     9bc:	08 95       	ret
	}
	else if (distance<=300 && distance>290)
     9be:	9c 01       	movw	r18, r24
     9c0:	23 52       	subi	r18, 0x23	; 35
     9c2:	31 40       	sbci	r19, 0x01	; 1
     9c4:	2a 30       	cpi	r18, 0x0A	; 10
     9c6:	31 05       	cpc	r19, r1
     9c8:	60 f5       	brcc	.+88     	; 0xa22 <__stack+0x123>
	{
		lcd_gotoxy(20,0);
     9ca:	60 e0       	ldi	r22, 0x00	; 0
     9cc:	84 e1       	ldi	r24, 0x14	; 20
     9ce:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9d2:	85 e0       	ldi	r24, 0x05	; 5
     9d4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     9d8:	60 e0       	ldi	r22, 0x00	; 0
     9da:	85 e1       	ldi	r24, 0x15	; 21
     9dc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9e0:	85 e0       	ldi	r24, 0x05	; 5
     9e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	86 e1       	ldi	r24, 0x16	; 22
     9ea:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9ee:	85 e0       	ldi	r24, 0x05	; 5
     9f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     9f4:	60 e0       	ldi	r22, 0x00	; 0
     9f6:	87 e1       	ldi	r24, 0x17	; 23
     9f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     9fc:	85 e0       	ldi	r24, 0x05	; 5
     9fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     a02:	60 e0       	ldi	r22, 0x00	; 0
     a04:	88 e1       	ldi	r24, 0x18	; 24
     a06:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     a0a:	82 e0       	ldi	r24, 0x02	; 2
     a0c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     a10:	60 e0       	ldi	r22, 0x00	; 0
     a12:	89 e1       	ldi	r24, 0x19	; 25
     a14:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     a18:	8c ef       	ldi	r24, 0xFC	; 252
     a1a:	91 e0       	ldi	r25, 0x01	; 1
     a1c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     a20:	08 95       	ret
	}
	else if (distance<=290 && distance>280)
     a22:	9c 01       	movw	r18, r24
     a24:	29 51       	subi	r18, 0x19	; 25
     a26:	31 40       	sbci	r19, 0x01	; 1
     a28:	2a 30       	cpi	r18, 0x0A	; 10
     a2a:	31 05       	cpc	r19, r1
     a2c:	60 f5       	brcc	.+88     	; 0xa86 <__stack+0x187>
	{
		lcd_gotoxy(20,0);
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	84 e1       	ldi	r24, 0x14	; 20
     a32:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a36:	85 e0       	ldi	r24, 0x05	; 5
     a38:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	85 e1       	ldi	r24, 0x15	; 21
     a40:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a44:	85 e0       	ldi	r24, 0x05	; 5
     a46:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	86 e1       	ldi	r24, 0x16	; 22
     a4e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a52:	85 e0       	ldi	r24, 0x05	; 5
     a54:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     a58:	60 e0       	ldi	r22, 0x00	; 0
     a5a:	87 e1       	ldi	r24, 0x17	; 23
     a5c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a60:	85 e0       	ldi	r24, 0x05	; 5
     a62:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	88 e1       	ldi	r24, 0x18	; 24
     a6a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     a6e:	83 e0       	ldi	r24, 0x03	; 3
     a70:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	89 e1       	ldi	r24, 0x19	; 25
     a78:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     a7c:	8c ef       	ldi	r24, 0xFC	; 252
     a7e:	91 e0       	ldi	r25, 0x01	; 1
     a80:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     a84:	08 95       	ret
	}
	else if (distance<=280 && distance>270)
     a86:	9c 01       	movw	r18, r24
     a88:	2f 50       	subi	r18, 0x0F	; 15
     a8a:	31 40       	sbci	r19, 0x01	; 1
     a8c:	2a 30       	cpi	r18, 0x0A	; 10
     a8e:	31 05       	cpc	r19, r1
     a90:	60 f5       	brcc	.+88     	; 0xaea <__stack+0x1eb>
	{
		lcd_gotoxy(20,0);
     a92:	60 e0       	ldi	r22, 0x00	; 0
     a94:	84 e1       	ldi	r24, 0x14	; 20
     a96:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     a9a:	85 e0       	ldi	r24, 0x05	; 5
     a9c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     aa0:	60 e0       	ldi	r22, 0x00	; 0
     aa2:	85 e1       	ldi	r24, 0x15	; 21
     aa4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     aa8:	85 e0       	ldi	r24, 0x05	; 5
     aaa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     aae:	60 e0       	ldi	r22, 0x00	; 0
     ab0:	86 e1       	ldi	r24, 0x16	; 22
     ab2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ab6:	85 e0       	ldi	r24, 0x05	; 5
     ab8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     abc:	60 e0       	ldi	r22, 0x00	; 0
     abe:	87 e1       	ldi	r24, 0x17	; 23
     ac0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ac4:	85 e0       	ldi	r24, 0x05	; 5
     ac6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     aca:	60 e0       	ldi	r22, 0x00	; 0
     acc:	88 e1       	ldi	r24, 0x18	; 24
     ace:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     ad2:	84 e0       	ldi	r24, 0x04	; 4
     ad4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     ad8:	60 e0       	ldi	r22, 0x00	; 0
     ada:	89 e1       	ldi	r24, 0x19	; 25
     adc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     ae0:	8c ef       	ldi	r24, 0xFC	; 252
     ae2:	91 e0       	ldi	r25, 0x01	; 1
     ae4:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     ae8:	08 95       	ret
	}
	else if (distance<=270 && distance>260)
     aea:	9c 01       	movw	r18, r24
     aec:	25 50       	subi	r18, 0x05	; 5
     aee:	31 40       	sbci	r19, 0x01	; 1
     af0:	2a 30       	cpi	r18, 0x0A	; 10
     af2:	31 05       	cpc	r19, r1
     af4:	60 f5       	brcc	.+88     	; 0xb4e <__stack+0x24f>
	{
		lcd_gotoxy(20,0);
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	84 e1       	ldi	r24, 0x14	; 20
     afa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     afe:	85 e0       	ldi	r24, 0x05	; 5
     b00:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     b04:	60 e0       	ldi	r22, 0x00	; 0
     b06:	85 e1       	ldi	r24, 0x15	; 21
     b08:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b0c:	85 e0       	ldi	r24, 0x05	; 5
     b0e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     b12:	60 e0       	ldi	r22, 0x00	; 0
     b14:	86 e1       	ldi	r24, 0x16	; 22
     b16:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b1a:	85 e0       	ldi	r24, 0x05	; 5
     b1c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     b20:	60 e0       	ldi	r22, 0x00	; 0
     b22:	87 e1       	ldi	r24, 0x17	; 23
     b24:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b28:	85 e0       	ldi	r24, 0x05	; 5
     b2a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	88 e1       	ldi	r24, 0x18	; 24
     b32:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b36:	85 e0       	ldi	r24, 0x05	; 5
     b38:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	89 e1       	ldi	r24, 0x19	; 25
     b40:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("                ");
     b44:	8c ef       	ldi	r24, 0xFC	; 252
     b46:	91 e0       	ldi	r25, 0x01	; 1
     b48:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     b4c:	08 95       	ret
	}
	else if (distance<=260 && distance>250)
     b4e:	9c 01       	movw	r18, r24
     b50:	2b 5f       	subi	r18, 0xFB	; 251
     b52:	31 09       	sbc	r19, r1
     b54:	2a 30       	cpi	r18, 0x0A	; 10
     b56:	31 05       	cpc	r19, r1
     b58:	98 f5       	brcc	.+102    	; 0xbc0 <__stack+0x2c1>
	{
		lcd_gotoxy(20,0);
     b5a:	60 e0       	ldi	r22, 0x00	; 0
     b5c:	84 e1       	ldi	r24, 0x14	; 20
     b5e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b62:	85 e0       	ldi	r24, 0x05	; 5
     b64:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	85 e1       	ldi	r24, 0x15	; 21
     b6c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b70:	85 e0       	ldi	r24, 0x05	; 5
     b72:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     b76:	60 e0       	ldi	r22, 0x00	; 0
     b78:	86 e1       	ldi	r24, 0x16	; 22
     b7a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b7e:	85 e0       	ldi	r24, 0x05	; 5
     b80:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     b84:	60 e0       	ldi	r22, 0x00	; 0
     b86:	87 e1       	ldi	r24, 0x17	; 23
     b88:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b8c:	85 e0       	ldi	r24, 0x05	; 5
     b8e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     b92:	60 e0       	ldi	r22, 0x00	; 0
     b94:	88 e1       	ldi	r24, 0x18	; 24
     b96:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     b9a:	85 e0       	ldi	r24, 0x05	; 5
     b9c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	89 e1       	ldi	r24, 0x19	; 25
     ba4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     bae:	60 e0       	ldi	r22, 0x00	; 0
     bb0:	8a e1       	ldi	r24, 0x1A	; 26
     bb2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     bb6:	8d ef       	ldi	r24, 0xFD	; 253
     bb8:	91 e0       	ldi	r25, 0x01	; 1
     bba:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     bbe:	08 95       	ret
	}
	else if (distance<=250 && distance>240)
     bc0:	9c 01       	movw	r18, r24
     bc2:	21 5f       	subi	r18, 0xF1	; 241
     bc4:	31 09       	sbc	r19, r1
     bc6:	2a 30       	cpi	r18, 0x0A	; 10
     bc8:	31 05       	cpc	r19, r1
     bca:	98 f5       	brcc	.+102    	; 0xc32 <__stack+0x333>
	{
		lcd_gotoxy(20,0);
     bcc:	60 e0       	ldi	r22, 0x00	; 0
     bce:	84 e1       	ldi	r24, 0x14	; 20
     bd0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     bd4:	85 e0       	ldi	r24, 0x05	; 5
     bd6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     bda:	60 e0       	ldi	r22, 0x00	; 0
     bdc:	85 e1       	ldi	r24, 0x15	; 21
     bde:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     be2:	85 e0       	ldi	r24, 0x05	; 5
     be4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     be8:	60 e0       	ldi	r22, 0x00	; 0
     bea:	86 e1       	ldi	r24, 0x16	; 22
     bec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     bf0:	85 e0       	ldi	r24, 0x05	; 5
     bf2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     bf6:	60 e0       	ldi	r22, 0x00	; 0
     bf8:	87 e1       	ldi	r24, 0x17	; 23
     bfa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     bfe:	85 e0       	ldi	r24, 0x05	; 5
     c00:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	88 e1       	ldi	r24, 0x18	; 24
     c08:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c0c:	85 e0       	ldi	r24, 0x05	; 5
     c0e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	89 e1       	ldi	r24, 0x19	; 25
     c16:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     c1a:	82 e0       	ldi	r24, 0x02	; 2
     c1c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     c20:	60 e0       	ldi	r22, 0x00	; 0
     c22:	8a e1       	ldi	r24, 0x1A	; 26
     c24:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     c28:	8d ef       	ldi	r24, 0xFD	; 253
     c2a:	91 e0       	ldi	r25, 0x01	; 1
     c2c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     c30:	08 95       	ret
	}
	else if (distance<=240 && distance>230)
     c32:	9c 01       	movw	r18, r24
     c34:	27 5e       	subi	r18, 0xE7	; 231
     c36:	31 09       	sbc	r19, r1
     c38:	2a 30       	cpi	r18, 0x0A	; 10
     c3a:	31 05       	cpc	r19, r1
     c3c:	98 f5       	brcc	.+102    	; 0xca4 <__stack+0x3a5>
	{
		lcd_gotoxy(20,0);
     c3e:	60 e0       	ldi	r22, 0x00	; 0
     c40:	84 e1       	ldi	r24, 0x14	; 20
     c42:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c46:	85 e0       	ldi	r24, 0x05	; 5
     c48:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     c4c:	60 e0       	ldi	r22, 0x00	; 0
     c4e:	85 e1       	ldi	r24, 0x15	; 21
     c50:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c54:	85 e0       	ldi	r24, 0x05	; 5
     c56:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	86 e1       	ldi	r24, 0x16	; 22
     c5e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c62:	85 e0       	ldi	r24, 0x05	; 5
     c64:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	87 e1       	ldi	r24, 0x17	; 23
     c6c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c70:	85 e0       	ldi	r24, 0x05	; 5
     c72:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     c76:	60 e0       	ldi	r22, 0x00	; 0
     c78:	88 e1       	ldi	r24, 0x18	; 24
     c7a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     c7e:	85 e0       	ldi	r24, 0x05	; 5
     c80:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	89 e1       	ldi	r24, 0x19	; 25
     c88:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     c8c:	83 e0       	ldi	r24, 0x03	; 3
     c8e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	8a e1       	ldi	r24, 0x1A	; 26
     c96:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     c9a:	8d ef       	ldi	r24, 0xFD	; 253
     c9c:	91 e0       	ldi	r25, 0x01	; 1
     c9e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     ca2:	08 95       	ret
	}
	else if (distance<=230 && distance>220)
     ca4:	9c 01       	movw	r18, r24
     ca6:	2d 5d       	subi	r18, 0xDD	; 221
     ca8:	31 09       	sbc	r19, r1
     caa:	2a 30       	cpi	r18, 0x0A	; 10
     cac:	31 05       	cpc	r19, r1
     cae:	98 f5       	brcc	.+102    	; 0xd16 <__stack+0x417>
	{
		lcd_gotoxy(20,0);
     cb0:	60 e0       	ldi	r22, 0x00	; 0
     cb2:	84 e1       	ldi	r24, 0x14	; 20
     cb4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cb8:	85 e0       	ldi	r24, 0x05	; 5
     cba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	85 e1       	ldi	r24, 0x15	; 21
     cc2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cc6:	85 e0       	ldi	r24, 0x05	; 5
     cc8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	86 e1       	ldi	r24, 0x16	; 22
     cd0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cd4:	85 e0       	ldi	r24, 0x05	; 5
     cd6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	87 e1       	ldi	r24, 0x17	; 23
     cde:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ce2:	85 e0       	ldi	r24, 0x05	; 5
     ce4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     ce8:	60 e0       	ldi	r22, 0x00	; 0
     cea:	88 e1       	ldi	r24, 0x18	; 24
     cec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     cf0:	85 e0       	ldi	r24, 0x05	; 5
     cf2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	89 e1       	ldi	r24, 0x19	; 25
     cfa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     cfe:	84 e0       	ldi	r24, 0x04	; 4
     d00:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	8a e1       	ldi	r24, 0x1A	; 26
     d08:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     d0c:	8d ef       	ldi	r24, 0xFD	; 253
     d0e:	91 e0       	ldi	r25, 0x01	; 1
     d10:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     d14:	08 95       	ret
	}
	else if (distance<=220 && distance>210)
     d16:	9c 01       	movw	r18, r24
     d18:	23 5d       	subi	r18, 0xD3	; 211
     d1a:	31 09       	sbc	r19, r1
     d1c:	2a 30       	cpi	r18, 0x0A	; 10
     d1e:	31 05       	cpc	r19, r1
     d20:	98 f5       	brcc	.+102    	; 0xd88 <__stack+0x489>
	{
		lcd_gotoxy(20,0);
     d22:	60 e0       	ldi	r22, 0x00	; 0
     d24:	84 e1       	ldi	r24, 0x14	; 20
     d26:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d2a:	85 e0       	ldi	r24, 0x05	; 5
     d2c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     d30:	60 e0       	ldi	r22, 0x00	; 0
     d32:	85 e1       	ldi	r24, 0x15	; 21
     d34:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d38:	85 e0       	ldi	r24, 0x05	; 5
     d3a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     d3e:	60 e0       	ldi	r22, 0x00	; 0
     d40:	86 e1       	ldi	r24, 0x16	; 22
     d42:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d46:	85 e0       	ldi	r24, 0x05	; 5
     d48:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     d4c:	60 e0       	ldi	r22, 0x00	; 0
     d4e:	87 e1       	ldi	r24, 0x17	; 23
     d50:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d54:	85 e0       	ldi	r24, 0x05	; 5
     d56:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     d5a:	60 e0       	ldi	r22, 0x00	; 0
     d5c:	88 e1       	ldi	r24, 0x18	; 24
     d5e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d62:	85 e0       	ldi	r24, 0x05	; 5
     d64:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	89 e1       	ldi	r24, 0x19	; 25
     d6c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d70:	85 e0       	ldi	r24, 0x05	; 5
     d72:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     d76:	60 e0       	ldi	r22, 0x00	; 0
     d78:	8a e1       	ldi	r24, 0x1A	; 26
     d7a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("               ");
     d7e:	8d ef       	ldi	r24, 0xFD	; 253
     d80:	91 e0       	ldi	r25, 0x01	; 1
     d82:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     d86:	08 95       	ret
	}
	else if (distance<=210 && distance>200)
     d88:	9c 01       	movw	r18, r24
     d8a:	29 5c       	subi	r18, 0xC9	; 201
     d8c:	31 09       	sbc	r19, r1
     d8e:	2a 30       	cpi	r18, 0x0A	; 10
     d90:	31 05       	cpc	r19, r1
     d92:	d0 f5       	brcc	.+116    	; 0xe08 <__stack+0x509>
	{
		lcd_gotoxy(20,0);
     d94:	60 e0       	ldi	r22, 0x00	; 0
     d96:	84 e1       	ldi	r24, 0x14	; 20
     d98:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     d9c:	85 e0       	ldi	r24, 0x05	; 5
     d9e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     da2:	60 e0       	ldi	r22, 0x00	; 0
     da4:	85 e1       	ldi	r24, 0x15	; 21
     da6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     daa:	85 e0       	ldi	r24, 0x05	; 5
     dac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	86 e1       	ldi	r24, 0x16	; 22
     db4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     db8:	85 e0       	ldi	r24, 0x05	; 5
     dba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     dbe:	60 e0       	ldi	r22, 0x00	; 0
     dc0:	87 e1       	ldi	r24, 0x17	; 23
     dc2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     dc6:	85 e0       	ldi	r24, 0x05	; 5
     dc8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     dcc:	60 e0       	ldi	r22, 0x00	; 0
     dce:	88 e1       	ldi	r24, 0x18	; 24
     dd0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     dd4:	85 e0       	ldi	r24, 0x05	; 5
     dd6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	89 e1       	ldi	r24, 0x19	; 25
     dde:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     de2:	85 e0       	ldi	r24, 0x05	; 5
     de4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     de8:	60 e0       	ldi	r22, 0x00	; 0
     dea:	8a e1       	ldi	r24, 0x1A	; 26
     dec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
     df0:	81 e0       	ldi	r24, 0x01	; 1
     df2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     df6:	60 e0       	ldi	r22, 0x00	; 0
     df8:	8b e1       	ldi	r24, 0x1B	; 27
     dfa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     dfe:	8e ef       	ldi	r24, 0xFE	; 254
     e00:	91 e0       	ldi	r25, 0x01	; 1
     e02:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     e06:	08 95       	ret
	}
	else if (distance<=200 && distance>190)
     e08:	9c 01       	movw	r18, r24
     e0a:	2f 5b       	subi	r18, 0xBF	; 191
     e0c:	31 09       	sbc	r19, r1
     e0e:	2a 30       	cpi	r18, 0x0A	; 10
     e10:	31 05       	cpc	r19, r1
     e12:	d0 f5       	brcc	.+116    	; 0xe88 <__stack+0x589>
	{
		lcd_gotoxy(20,0);
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	84 e1       	ldi	r24, 0x14	; 20
     e18:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e1c:	85 e0       	ldi	r24, 0x05	; 5
     e1e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     e22:	60 e0       	ldi	r22, 0x00	; 0
     e24:	85 e1       	ldi	r24, 0x15	; 21
     e26:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e2a:	85 e0       	ldi	r24, 0x05	; 5
     e2c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     e30:	60 e0       	ldi	r22, 0x00	; 0
     e32:	86 e1       	ldi	r24, 0x16	; 22
     e34:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e38:	85 e0       	ldi	r24, 0x05	; 5
     e3a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	87 e1       	ldi	r24, 0x17	; 23
     e42:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e46:	85 e0       	ldi	r24, 0x05	; 5
     e48:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     e4c:	60 e0       	ldi	r22, 0x00	; 0
     e4e:	88 e1       	ldi	r24, 0x18	; 24
     e50:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e54:	85 e0       	ldi	r24, 0x05	; 5
     e56:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     e5a:	60 e0       	ldi	r22, 0x00	; 0
     e5c:	89 e1       	ldi	r24, 0x19	; 25
     e5e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e62:	85 e0       	ldi	r24, 0x05	; 5
     e64:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     e68:	60 e0       	ldi	r22, 0x00	; 0
     e6a:	8a e1       	ldi	r24, 0x1A	; 26
     e6c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
     e70:	82 e0       	ldi	r24, 0x02	; 2
     e72:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	8b e1       	ldi	r24, 0x1B	; 27
     e7a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     e7e:	8e ef       	ldi	r24, 0xFE	; 254
     e80:	91 e0       	ldi	r25, 0x01	; 1
     e82:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     e86:	08 95       	ret
	}
	else if (distance<=190 && distance>180)
     e88:	9c 01       	movw	r18, r24
     e8a:	25 5b       	subi	r18, 0xB5	; 181
     e8c:	31 09       	sbc	r19, r1
     e8e:	2a 30       	cpi	r18, 0x0A	; 10
     e90:	31 05       	cpc	r19, r1
     e92:	d0 f5       	brcc	.+116    	; 0xf08 <__stack+0x609>
	{
		lcd_gotoxy(20,0);
     e94:	60 e0       	ldi	r22, 0x00	; 0
     e96:	84 e1       	ldi	r24, 0x14	; 20
     e98:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     e9c:	85 e0       	ldi	r24, 0x05	; 5
     e9e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     ea2:	60 e0       	ldi	r22, 0x00	; 0
     ea4:	85 e1       	ldi	r24, 0x15	; 21
     ea6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     eaa:	85 e0       	ldi	r24, 0x05	; 5
     eac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	86 e1       	ldi	r24, 0x16	; 22
     eb4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     eb8:	85 e0       	ldi	r24, 0x05	; 5
     eba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	87 e1       	ldi	r24, 0x17	; 23
     ec2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ec6:	85 e0       	ldi	r24, 0x05	; 5
     ec8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	88 e1       	ldi	r24, 0x18	; 24
     ed0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ed4:	85 e0       	ldi	r24, 0x05	; 5
     ed6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	89 e1       	ldi	r24, 0x19	; 25
     ede:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ee2:	85 e0       	ldi	r24, 0x05	; 5
     ee4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     ee8:	60 e0       	ldi	r22, 0x00	; 0
     eea:	8a e1       	ldi	r24, 0x1A	; 26
     eec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
     ef0:	83 e0       	ldi	r24, 0x03	; 3
     ef2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     ef6:	60 e0       	ldi	r22, 0x00	; 0
     ef8:	8b e1       	ldi	r24, 0x1B	; 27
     efa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     efe:	8e ef       	ldi	r24, 0xFE	; 254
     f00:	91 e0       	ldi	r25, 0x01	; 1
     f02:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     f06:	08 95       	ret
	}
	else if (distance<=180 && distance>170)
     f08:	9c 01       	movw	r18, r24
     f0a:	2b 5a       	subi	r18, 0xAB	; 171
     f0c:	31 09       	sbc	r19, r1
     f0e:	2a 30       	cpi	r18, 0x0A	; 10
     f10:	31 05       	cpc	r19, r1
     f12:	d0 f5       	brcc	.+116    	; 0xf88 <__stack+0x689>
	{
		lcd_gotoxy(20,0);
     f14:	60 e0       	ldi	r22, 0x00	; 0
     f16:	84 e1       	ldi	r24, 0x14	; 20
     f18:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f1c:	85 e0       	ldi	r24, 0x05	; 5
     f1e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     f22:	60 e0       	ldi	r22, 0x00	; 0
     f24:	85 e1       	ldi	r24, 0x15	; 21
     f26:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f2a:	85 e0       	ldi	r24, 0x05	; 5
     f2c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     f30:	60 e0       	ldi	r22, 0x00	; 0
     f32:	86 e1       	ldi	r24, 0x16	; 22
     f34:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f38:	85 e0       	ldi	r24, 0x05	; 5
     f3a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     f3e:	60 e0       	ldi	r22, 0x00	; 0
     f40:	87 e1       	ldi	r24, 0x17	; 23
     f42:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f46:	85 e0       	ldi	r24, 0x05	; 5
     f48:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     f4c:	60 e0       	ldi	r22, 0x00	; 0
     f4e:	88 e1       	ldi	r24, 0x18	; 24
     f50:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f54:	85 e0       	ldi	r24, 0x05	; 5
     f56:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	89 e1       	ldi	r24, 0x19	; 25
     f5e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f62:	85 e0       	ldi	r24, 0x05	; 5
     f64:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     f68:	60 e0       	ldi	r22, 0x00	; 0
     f6a:	8a e1       	ldi	r24, 0x1A	; 26
     f6c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
     f70:	84 e0       	ldi	r24, 0x04	; 4
     f72:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     f76:	60 e0       	ldi	r22, 0x00	; 0
     f78:	8b e1       	ldi	r24, 0x1B	; 27
     f7a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     f7e:	8e ef       	ldi	r24, 0xFE	; 254
     f80:	91 e0       	ldi	r25, 0x01	; 1
     f82:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
     f86:	08 95       	ret
	}
	else if (distance<=170 && distance>160)
     f88:	9c 01       	movw	r18, r24
     f8a:	21 5a       	subi	r18, 0xA1	; 161
     f8c:	31 09       	sbc	r19, r1
     f8e:	2a 30       	cpi	r18, 0x0A	; 10
     f90:	31 05       	cpc	r19, r1
     f92:	d0 f5       	brcc	.+116    	; 0x1008 <__stack+0x709>
	{
		lcd_gotoxy(20,0);
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	84 e1       	ldi	r24, 0x14	; 20
     f98:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     f9c:	85 e0       	ldi	r24, 0x05	; 5
     f9e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
     fa2:	60 e0       	ldi	r22, 0x00	; 0
     fa4:	85 e1       	ldi	r24, 0x15	; 21
     fa6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     faa:	85 e0       	ldi	r24, 0x05	; 5
     fac:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
     fb0:	60 e0       	ldi	r22, 0x00	; 0
     fb2:	86 e1       	ldi	r24, 0x16	; 22
     fb4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fb8:	85 e0       	ldi	r24, 0x05	; 5
     fba:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
     fbe:	60 e0       	ldi	r22, 0x00	; 0
     fc0:	87 e1       	ldi	r24, 0x17	; 23
     fc2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fc6:	85 e0       	ldi	r24, 0x05	; 5
     fc8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	88 e1       	ldi	r24, 0x18	; 24
     fd0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fd4:	85 e0       	ldi	r24, 0x05	; 5
     fd6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
     fda:	60 e0       	ldi	r22, 0x00	; 0
     fdc:	89 e1       	ldi	r24, 0x19	; 25
     fde:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     fe2:	85 e0       	ldi	r24, 0x05	; 5
     fe4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
     fe8:	60 e0       	ldi	r22, 0x00	; 0
     fea:	8a e1       	ldi	r24, 0x1A	; 26
     fec:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
     ff0:	85 e0       	ldi	r24, 0x05	; 5
     ff2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
     ff6:	60 e0       	ldi	r22, 0x00	; 0
     ff8:	8b e1       	ldi	r24, 0x1B	; 27
     ffa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("              ");
     ffe:	8e ef       	ldi	r24, 0xFE	; 254
    1000:	91 e0       	ldi	r25, 0x01	; 1
    1002:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1006:	08 95       	ret
	}
	else if (distance<=160 && distance>150)
    1008:	9c 01       	movw	r18, r24
    100a:	27 59       	subi	r18, 0x97	; 151
    100c:	31 09       	sbc	r19, r1
    100e:	2a 30       	cpi	r18, 0x0A	; 10
    1010:	31 05       	cpc	r19, r1
    1012:	08 f0       	brcs	.+2      	; 0x1016 <__stack+0x717>
    1014:	41 c0       	rjmp	.+130    	; 0x1098 <__stack+0x799>
	{
		lcd_gotoxy(20,0);
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	84 e1       	ldi	r24, 0x14	; 20
    101a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    101e:	85 e0       	ldi	r24, 0x05	; 5
    1020:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1024:	60 e0       	ldi	r22, 0x00	; 0
    1026:	85 e1       	ldi	r24, 0x15	; 21
    1028:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    102c:	85 e0       	ldi	r24, 0x05	; 5
    102e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1032:	60 e0       	ldi	r22, 0x00	; 0
    1034:	86 e1       	ldi	r24, 0x16	; 22
    1036:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    103a:	85 e0       	ldi	r24, 0x05	; 5
    103c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1040:	60 e0       	ldi	r22, 0x00	; 0
    1042:	87 e1       	ldi	r24, 0x17	; 23
    1044:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1048:	85 e0       	ldi	r24, 0x05	; 5
    104a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    104e:	60 e0       	ldi	r22, 0x00	; 0
    1050:	88 e1       	ldi	r24, 0x18	; 24
    1052:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1056:	85 e0       	ldi	r24, 0x05	; 5
    1058:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    105c:	60 e0       	ldi	r22, 0x00	; 0
    105e:	89 e1       	ldi	r24, 0x19	; 25
    1060:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1064:	85 e0       	ldi	r24, 0x05	; 5
    1066:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    106a:	60 e0       	ldi	r22, 0x00	; 0
    106c:	8a e1       	ldi	r24, 0x1A	; 26
    106e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1072:	85 e0       	ldi	r24, 0x05	; 5
    1074:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1078:	60 e0       	ldi	r22, 0x00	; 0
    107a:	8b e1       	ldi	r24, 0x1B	; 27
    107c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1086:	60 e0       	ldi	r22, 0x00	; 0
    1088:	8c e1       	ldi	r24, 0x1C	; 28
    108a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    108e:	8f ef       	ldi	r24, 0xFF	; 255
    1090:	91 e0       	ldi	r25, 0x01	; 1
    1092:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1096:	08 95       	ret
	}
	else if (distance<=150 && distance>140)
    1098:	9c 01       	movw	r18, r24
    109a:	2d 58       	subi	r18, 0x8D	; 141
    109c:	31 09       	sbc	r19, r1
    109e:	2a 30       	cpi	r18, 0x0A	; 10
    10a0:	31 05       	cpc	r19, r1
    10a2:	08 f0       	brcs	.+2      	; 0x10a6 <__stack+0x7a7>
    10a4:	41 c0       	rjmp	.+130    	; 0x1128 <__stack+0x829>
	{
		lcd_gotoxy(20,0);
    10a6:	60 e0       	ldi	r22, 0x00	; 0
    10a8:	84 e1       	ldi	r24, 0x14	; 20
    10aa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10ae:	85 e0       	ldi	r24, 0x05	; 5
    10b0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    10b4:	60 e0       	ldi	r22, 0x00	; 0
    10b6:	85 e1       	ldi	r24, 0x15	; 21
    10b8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10bc:	85 e0       	ldi	r24, 0x05	; 5
    10be:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    10c2:	60 e0       	ldi	r22, 0x00	; 0
    10c4:	86 e1       	ldi	r24, 0x16	; 22
    10c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10ca:	85 e0       	ldi	r24, 0x05	; 5
    10cc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    10d0:	60 e0       	ldi	r22, 0x00	; 0
    10d2:	87 e1       	ldi	r24, 0x17	; 23
    10d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10d8:	85 e0       	ldi	r24, 0x05	; 5
    10da:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    10de:	60 e0       	ldi	r22, 0x00	; 0
    10e0:	88 e1       	ldi	r24, 0x18	; 24
    10e2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10e6:	85 e0       	ldi	r24, 0x05	; 5
    10e8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    10ec:	60 e0       	ldi	r22, 0x00	; 0
    10ee:	89 e1       	ldi	r24, 0x19	; 25
    10f0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    10f4:	85 e0       	ldi	r24, 0x05	; 5
    10f6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	8a e1       	ldi	r24, 0x1A	; 26
    10fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1102:	85 e0       	ldi	r24, 0x05	; 5
    1104:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	8b e1       	ldi	r24, 0x1B	; 27
    110c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
    1110:	82 e0       	ldi	r24, 0x02	; 2
    1112:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1116:	60 e0       	ldi	r22, 0x00	; 0
    1118:	8c e1       	ldi	r24, 0x1C	; 28
    111a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    111e:	8f ef       	ldi	r24, 0xFF	; 255
    1120:	91 e0       	ldi	r25, 0x01	; 1
    1122:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1126:	08 95       	ret
	}
	else if (distance<=140 && distance>130)
    1128:	9c 01       	movw	r18, r24
    112a:	23 58       	subi	r18, 0x83	; 131
    112c:	31 09       	sbc	r19, r1
    112e:	2a 30       	cpi	r18, 0x0A	; 10
    1130:	31 05       	cpc	r19, r1
    1132:	08 f0       	brcs	.+2      	; 0x1136 <__stack+0x837>
    1134:	41 c0       	rjmp	.+130    	; 0x11b8 <__stack+0x8b9>
	{
		lcd_gotoxy(20,0);
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	84 e1       	ldi	r24, 0x14	; 20
    113a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    113e:	85 e0       	ldi	r24, 0x05	; 5
    1140:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1144:	60 e0       	ldi	r22, 0x00	; 0
    1146:	85 e1       	ldi	r24, 0x15	; 21
    1148:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    114c:	85 e0       	ldi	r24, 0x05	; 5
    114e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1152:	60 e0       	ldi	r22, 0x00	; 0
    1154:	86 e1       	ldi	r24, 0x16	; 22
    1156:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    115a:	85 e0       	ldi	r24, 0x05	; 5
    115c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1160:	60 e0       	ldi	r22, 0x00	; 0
    1162:	87 e1       	ldi	r24, 0x17	; 23
    1164:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1168:	85 e0       	ldi	r24, 0x05	; 5
    116a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	88 e1       	ldi	r24, 0x18	; 24
    1172:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1176:	85 e0       	ldi	r24, 0x05	; 5
    1178:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    117c:	60 e0       	ldi	r22, 0x00	; 0
    117e:	89 e1       	ldi	r24, 0x19	; 25
    1180:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1184:	85 e0       	ldi	r24, 0x05	; 5
    1186:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    118a:	60 e0       	ldi	r22, 0x00	; 0
    118c:	8a e1       	ldi	r24, 0x1A	; 26
    118e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1192:	85 e0       	ldi	r24, 0x05	; 5
    1194:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1198:	60 e0       	ldi	r22, 0x00	; 0
    119a:	8b e1       	ldi	r24, 0x1B	; 27
    119c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
    11a0:	83 e0       	ldi	r24, 0x03	; 3
    11a2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    11a6:	60 e0       	ldi	r22, 0x00	; 0
    11a8:	8c e1       	ldi	r24, 0x1C	; 28
    11aa:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    11ae:	8f ef       	ldi	r24, 0xFF	; 255
    11b0:	91 e0       	ldi	r25, 0x01	; 1
    11b2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    11b6:	08 95       	ret
	}
	else if (distance<=130 && distance>120)
    11b8:	9c 01       	movw	r18, r24
    11ba:	29 57       	subi	r18, 0x79	; 121
    11bc:	31 09       	sbc	r19, r1
    11be:	2a 30       	cpi	r18, 0x0A	; 10
    11c0:	31 05       	cpc	r19, r1
    11c2:	08 f0       	brcs	.+2      	; 0x11c6 <__stack+0x8c7>
    11c4:	41 c0       	rjmp	.+130    	; 0x1248 <__stack+0x949>
	{
		lcd_gotoxy(20,0);
    11c6:	60 e0       	ldi	r22, 0x00	; 0
    11c8:	84 e1       	ldi	r24, 0x14	; 20
    11ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11ce:	85 e0       	ldi	r24, 0x05	; 5
    11d0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    11d4:	60 e0       	ldi	r22, 0x00	; 0
    11d6:	85 e1       	ldi	r24, 0x15	; 21
    11d8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11dc:	85 e0       	ldi	r24, 0x05	; 5
    11de:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	86 e1       	ldi	r24, 0x16	; 22
    11e6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11ea:	85 e0       	ldi	r24, 0x05	; 5
    11ec:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    11f0:	60 e0       	ldi	r22, 0x00	; 0
    11f2:	87 e1       	ldi	r24, 0x17	; 23
    11f4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    11f8:	85 e0       	ldi	r24, 0x05	; 5
    11fa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    11fe:	60 e0       	ldi	r22, 0x00	; 0
    1200:	88 e1       	ldi	r24, 0x18	; 24
    1202:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1206:	85 e0       	ldi	r24, 0x05	; 5
    1208:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    120c:	60 e0       	ldi	r22, 0x00	; 0
    120e:	89 e1       	ldi	r24, 0x19	; 25
    1210:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1214:	85 e0       	ldi	r24, 0x05	; 5
    1216:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    121a:	60 e0       	ldi	r22, 0x00	; 0
    121c:	8a e1       	ldi	r24, 0x1A	; 26
    121e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1222:	85 e0       	ldi	r24, 0x05	; 5
    1224:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1228:	60 e0       	ldi	r22, 0x00	; 0
    122a:	8b e1       	ldi	r24, 0x1B	; 27
    122c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
    1230:	84 e0       	ldi	r24, 0x04	; 4
    1232:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1236:	60 e0       	ldi	r22, 0x00	; 0
    1238:	8c e1       	ldi	r24, 0x1C	; 28
    123a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    123e:	8f ef       	ldi	r24, 0xFF	; 255
    1240:	91 e0       	ldi	r25, 0x01	; 1
    1242:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1246:	08 95       	ret
	}
	else if (distance<=120 && distance>110)
    1248:	9c 01       	movw	r18, r24
    124a:	2f 56       	subi	r18, 0x6F	; 111
    124c:	31 09       	sbc	r19, r1
    124e:	2a 30       	cpi	r18, 0x0A	; 10
    1250:	31 05       	cpc	r19, r1
    1252:	08 f0       	brcs	.+2      	; 0x1256 <__stack+0x957>
    1254:	41 c0       	rjmp	.+130    	; 0x12d8 <__stack+0x9d9>
	{
		lcd_gotoxy(20,0);
    1256:	60 e0       	ldi	r22, 0x00	; 0
    1258:	84 e1       	ldi	r24, 0x14	; 20
    125a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    125e:	85 e0       	ldi	r24, 0x05	; 5
    1260:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1264:	60 e0       	ldi	r22, 0x00	; 0
    1266:	85 e1       	ldi	r24, 0x15	; 21
    1268:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    126c:	85 e0       	ldi	r24, 0x05	; 5
    126e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1272:	60 e0       	ldi	r22, 0x00	; 0
    1274:	86 e1       	ldi	r24, 0x16	; 22
    1276:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    127a:	85 e0       	ldi	r24, 0x05	; 5
    127c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	87 e1       	ldi	r24, 0x17	; 23
    1284:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1288:	85 e0       	ldi	r24, 0x05	; 5
    128a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    128e:	60 e0       	ldi	r22, 0x00	; 0
    1290:	88 e1       	ldi	r24, 0x18	; 24
    1292:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1296:	85 e0       	ldi	r24, 0x05	; 5
    1298:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    129c:	60 e0       	ldi	r22, 0x00	; 0
    129e:	89 e1       	ldi	r24, 0x19	; 25
    12a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12a4:	85 e0       	ldi	r24, 0x05	; 5
    12a6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    12aa:	60 e0       	ldi	r22, 0x00	; 0
    12ac:	8a e1       	ldi	r24, 0x1A	; 26
    12ae:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12b2:	85 e0       	ldi	r24, 0x05	; 5
    12b4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    12b8:	60 e0       	ldi	r22, 0x00	; 0
    12ba:	8b e1       	ldi	r24, 0x1B	; 27
    12bc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12c0:	85 e0       	ldi	r24, 0x05	; 5
    12c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    12c6:	60 e0       	ldi	r22, 0x00	; 0
    12c8:	8c e1       	ldi	r24, 0x1C	; 28
    12ca:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("             ");
    12ce:	8f ef       	ldi	r24, 0xFF	; 255
    12d0:	91 e0       	ldi	r25, 0x01	; 1
    12d2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    12d6:	08 95       	ret
	}
	else if (distance<=110 && distance>100)
    12d8:	9c 01       	movw	r18, r24
    12da:	25 56       	subi	r18, 0x65	; 101
    12dc:	31 09       	sbc	r19, r1
    12de:	2a 30       	cpi	r18, 0x0A	; 10
    12e0:	31 05       	cpc	r19, r1
    12e2:	08 f0       	brcs	.+2      	; 0x12e6 <__stack+0x9e7>
    12e4:	48 c0       	rjmp	.+144    	; 0x1376 <__stack+0xa77>
	{
		lcd_gotoxy(20,0);
    12e6:	60 e0       	ldi	r22, 0x00	; 0
    12e8:	84 e1       	ldi	r24, 0x14	; 20
    12ea:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12ee:	85 e0       	ldi	r24, 0x05	; 5
    12f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    12f4:	60 e0       	ldi	r22, 0x00	; 0
    12f6:	85 e1       	ldi	r24, 0x15	; 21
    12f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    12fc:	85 e0       	ldi	r24, 0x05	; 5
    12fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1302:	60 e0       	ldi	r22, 0x00	; 0
    1304:	86 e1       	ldi	r24, 0x16	; 22
    1306:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    130a:	85 e0       	ldi	r24, 0x05	; 5
    130c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1310:	60 e0       	ldi	r22, 0x00	; 0
    1312:	87 e1       	ldi	r24, 0x17	; 23
    1314:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1318:	85 e0       	ldi	r24, 0x05	; 5
    131a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    131e:	60 e0       	ldi	r22, 0x00	; 0
    1320:	88 e1       	ldi	r24, 0x18	; 24
    1322:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1326:	85 e0       	ldi	r24, 0x05	; 5
    1328:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    132c:	60 e0       	ldi	r22, 0x00	; 0
    132e:	89 e1       	ldi	r24, 0x19	; 25
    1330:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1334:	85 e0       	ldi	r24, 0x05	; 5
    1336:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    133a:	60 e0       	ldi	r22, 0x00	; 0
    133c:	8a e1       	ldi	r24, 0x1A	; 26
    133e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1342:	85 e0       	ldi	r24, 0x05	; 5
    1344:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1348:	60 e0       	ldi	r22, 0x00	; 0
    134a:	8b e1       	ldi	r24, 0x1B	; 27
    134c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1350:	85 e0       	ldi	r24, 0x05	; 5
    1352:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	8c e1       	ldi	r24, 0x1C	; 28
    135a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1364:	60 e0       	ldi	r22, 0x00	; 0
    1366:	8d e1       	ldi	r24, 0x1D	; 29
    1368:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    136c:	80 e0       	ldi	r24, 0x00	; 0
    136e:	92 e0       	ldi	r25, 0x02	; 2
    1370:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1374:	08 95       	ret
	}
	else if (distance<=100 && distance>90)
    1376:	9c 01       	movw	r18, r24
    1378:	2b 55       	subi	r18, 0x5B	; 91
    137a:	31 09       	sbc	r19, r1
    137c:	2a 30       	cpi	r18, 0x0A	; 10
    137e:	31 05       	cpc	r19, r1
    1380:	08 f0       	brcs	.+2      	; 0x1384 <__stack+0xa85>
    1382:	48 c0       	rjmp	.+144    	; 0x1414 <__stack+0xb15>
	{
		lcd_gotoxy(20,0);
    1384:	60 e0       	ldi	r22, 0x00	; 0
    1386:	84 e1       	ldi	r24, 0x14	; 20
    1388:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    138c:	85 e0       	ldi	r24, 0x05	; 5
    138e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1392:	60 e0       	ldi	r22, 0x00	; 0
    1394:	85 e1       	ldi	r24, 0x15	; 21
    1396:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    139a:	85 e0       	ldi	r24, 0x05	; 5
    139c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    13a0:	60 e0       	ldi	r22, 0x00	; 0
    13a2:	86 e1       	ldi	r24, 0x16	; 22
    13a4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13a8:	85 e0       	ldi	r24, 0x05	; 5
    13aa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	87 e1       	ldi	r24, 0x17	; 23
    13b2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13b6:	85 e0       	ldi	r24, 0x05	; 5
    13b8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    13bc:	60 e0       	ldi	r22, 0x00	; 0
    13be:	88 e1       	ldi	r24, 0x18	; 24
    13c0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13c4:	85 e0       	ldi	r24, 0x05	; 5
    13c6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    13ca:	60 e0       	ldi	r22, 0x00	; 0
    13cc:	89 e1       	ldi	r24, 0x19	; 25
    13ce:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13d2:	85 e0       	ldi	r24, 0x05	; 5
    13d4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    13d8:	60 e0       	ldi	r22, 0x00	; 0
    13da:	8a e1       	ldi	r24, 0x1A	; 26
    13dc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13e0:	85 e0       	ldi	r24, 0x05	; 5
    13e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    13e6:	60 e0       	ldi	r22, 0x00	; 0
    13e8:	8b e1       	ldi	r24, 0x1B	; 27
    13ea:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    13ee:	85 e0       	ldi	r24, 0x05	; 5
    13f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	8c e1       	ldi	r24, 0x1C	; 28
    13f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
    13fc:	82 e0       	ldi	r24, 0x02	; 2
    13fe:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1402:	60 e0       	ldi	r22, 0x00	; 0
    1404:	8d e1       	ldi	r24, 0x1D	; 29
    1406:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    140a:	80 e0       	ldi	r24, 0x00	; 0
    140c:	92 e0       	ldi	r25, 0x02	; 2
    140e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1412:	08 95       	ret
	}
	else if (distance<=90 && distance>80)
    1414:	9c 01       	movw	r18, r24
    1416:	21 55       	subi	r18, 0x51	; 81
    1418:	31 09       	sbc	r19, r1
    141a:	2a 30       	cpi	r18, 0x0A	; 10
    141c:	31 05       	cpc	r19, r1
    141e:	08 f0       	brcs	.+2      	; 0x1422 <__stack+0xb23>
    1420:	48 c0       	rjmp	.+144    	; 0x14b2 <__stack+0xbb3>
	{
		lcd_gotoxy(20,0);
    1422:	60 e0       	ldi	r22, 0x00	; 0
    1424:	84 e1       	ldi	r24, 0x14	; 20
    1426:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    142a:	85 e0       	ldi	r24, 0x05	; 5
    142c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	85 e1       	ldi	r24, 0x15	; 21
    1434:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1438:	85 e0       	ldi	r24, 0x05	; 5
    143a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	86 e1       	ldi	r24, 0x16	; 22
    1442:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1446:	85 e0       	ldi	r24, 0x05	; 5
    1448:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    144c:	60 e0       	ldi	r22, 0x00	; 0
    144e:	87 e1       	ldi	r24, 0x17	; 23
    1450:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1454:	85 e0       	ldi	r24, 0x05	; 5
    1456:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	88 e1       	ldi	r24, 0x18	; 24
    145e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1462:	85 e0       	ldi	r24, 0x05	; 5
    1464:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    1468:	60 e0       	ldi	r22, 0x00	; 0
    146a:	89 e1       	ldi	r24, 0x19	; 25
    146c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1470:	85 e0       	ldi	r24, 0x05	; 5
    1472:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1476:	60 e0       	ldi	r22, 0x00	; 0
    1478:	8a e1       	ldi	r24, 0x1A	; 26
    147a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    147e:	85 e0       	ldi	r24, 0x05	; 5
    1480:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1484:	60 e0       	ldi	r22, 0x00	; 0
    1486:	8b e1       	ldi	r24, 0x1B	; 27
    1488:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    148c:	85 e0       	ldi	r24, 0x05	; 5
    148e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1492:	60 e0       	ldi	r22, 0x00	; 0
    1494:	8c e1       	ldi	r24, 0x1C	; 28
    1496:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
    149a:	83 e0       	ldi	r24, 0x03	; 3
    149c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    14a0:	60 e0       	ldi	r22, 0x00	; 0
    14a2:	8d e1       	ldi	r24, 0x1D	; 29
    14a4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	92 e0       	ldi	r25, 0x02	; 2
    14ac:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    14b0:	08 95       	ret
	}
	else if (distance<=80 && distance>70)
    14b2:	9c 01       	movw	r18, r24
    14b4:	27 54       	subi	r18, 0x47	; 71
    14b6:	31 09       	sbc	r19, r1
    14b8:	2a 30       	cpi	r18, 0x0A	; 10
    14ba:	31 05       	cpc	r19, r1
    14bc:	08 f0       	brcs	.+2      	; 0x14c0 <__stack+0xbc1>
    14be:	48 c0       	rjmp	.+144    	; 0x1550 <__stack+0xc51>
	{
		lcd_gotoxy(20,0);
    14c0:	60 e0       	ldi	r22, 0x00	; 0
    14c2:	84 e1       	ldi	r24, 0x14	; 20
    14c4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14c8:	85 e0       	ldi	r24, 0x05	; 5
    14ca:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    14ce:	60 e0       	ldi	r22, 0x00	; 0
    14d0:	85 e1       	ldi	r24, 0x15	; 21
    14d2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14d6:	85 e0       	ldi	r24, 0x05	; 5
    14d8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    14dc:	60 e0       	ldi	r22, 0x00	; 0
    14de:	86 e1       	ldi	r24, 0x16	; 22
    14e0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14e4:	85 e0       	ldi	r24, 0x05	; 5
    14e6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    14ea:	60 e0       	ldi	r22, 0x00	; 0
    14ec:	87 e1       	ldi	r24, 0x17	; 23
    14ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    14f2:	85 e0       	ldi	r24, 0x05	; 5
    14f4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    14f8:	60 e0       	ldi	r22, 0x00	; 0
    14fa:	88 e1       	ldi	r24, 0x18	; 24
    14fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1500:	85 e0       	ldi	r24, 0x05	; 5
    1502:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    1506:	60 e0       	ldi	r22, 0x00	; 0
    1508:	89 e1       	ldi	r24, 0x19	; 25
    150a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    150e:	85 e0       	ldi	r24, 0x05	; 5
    1510:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1514:	60 e0       	ldi	r22, 0x00	; 0
    1516:	8a e1       	ldi	r24, 0x1A	; 26
    1518:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    151c:	85 e0       	ldi	r24, 0x05	; 5
    151e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1522:	60 e0       	ldi	r22, 0x00	; 0
    1524:	8b e1       	ldi	r24, 0x1B	; 27
    1526:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    152a:	85 e0       	ldi	r24, 0x05	; 5
    152c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1530:	60 e0       	ldi	r22, 0x00	; 0
    1532:	8c e1       	ldi	r24, 0x1C	; 28
    1534:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
    1538:	84 e0       	ldi	r24, 0x04	; 4
    153a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    153e:	60 e0       	ldi	r22, 0x00	; 0
    1540:	8d e1       	ldi	r24, 0x1D	; 29
    1542:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	92 e0       	ldi	r25, 0x02	; 2
    154a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    154e:	08 95       	ret
	}
	else if (distance<=70 && distance>60)
    1550:	9c 01       	movw	r18, r24
    1552:	2d 53       	subi	r18, 0x3D	; 61
    1554:	31 09       	sbc	r19, r1
    1556:	2a 30       	cpi	r18, 0x0A	; 10
    1558:	31 05       	cpc	r19, r1
    155a:	08 f0       	brcs	.+2      	; 0x155e <__stack+0xc5f>
    155c:	48 c0       	rjmp	.+144    	; 0x15ee <__stack+0xcef>
	{
		lcd_gotoxy(20,0);
    155e:	60 e0       	ldi	r22, 0x00	; 0
    1560:	84 e1       	ldi	r24, 0x14	; 20
    1562:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1566:	85 e0       	ldi	r24, 0x05	; 5
    1568:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    156c:	60 e0       	ldi	r22, 0x00	; 0
    156e:	85 e1       	ldi	r24, 0x15	; 21
    1570:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1574:	85 e0       	ldi	r24, 0x05	; 5
    1576:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    157a:	60 e0       	ldi	r22, 0x00	; 0
    157c:	86 e1       	ldi	r24, 0x16	; 22
    157e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1582:	85 e0       	ldi	r24, 0x05	; 5
    1584:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1588:	60 e0       	ldi	r22, 0x00	; 0
    158a:	87 e1       	ldi	r24, 0x17	; 23
    158c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1590:	85 e0       	ldi	r24, 0x05	; 5
    1592:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	88 e1       	ldi	r24, 0x18	; 24
    159a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    159e:	85 e0       	ldi	r24, 0x05	; 5
    15a0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    15a4:	60 e0       	ldi	r22, 0x00	; 0
    15a6:	89 e1       	ldi	r24, 0x19	; 25
    15a8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15ac:	85 e0       	ldi	r24, 0x05	; 5
    15ae:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    15b2:	60 e0       	ldi	r22, 0x00	; 0
    15b4:	8a e1       	ldi	r24, 0x1A	; 26
    15b6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15ba:	85 e0       	ldi	r24, 0x05	; 5
    15bc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    15c0:	60 e0       	ldi	r22, 0x00	; 0
    15c2:	8b e1       	ldi	r24, 0x1B	; 27
    15c4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15c8:	85 e0       	ldi	r24, 0x05	; 5
    15ca:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    15ce:	60 e0       	ldi	r22, 0x00	; 0
    15d0:	8c e1       	ldi	r24, 0x1C	; 28
    15d2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    15d6:	85 e0       	ldi	r24, 0x05	; 5
    15d8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    15dc:	60 e0       	ldi	r22, 0x00	; 0
    15de:	8d e1       	ldi	r24, 0x1D	; 29
    15e0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("            ");
    15e4:	80 e0       	ldi	r24, 0x00	; 0
    15e6:	92 e0       	ldi	r25, 0x02	; 2
    15e8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    15ec:	08 95       	ret
	}
	else if (distance<=60 && distance>50)
    15ee:	9c 01       	movw	r18, r24
    15f0:	23 53       	subi	r18, 0x33	; 51
    15f2:	31 09       	sbc	r19, r1
    15f4:	2a 30       	cpi	r18, 0x0A	; 10
    15f6:	31 05       	cpc	r19, r1
    15f8:	08 f0       	brcs	.+2      	; 0x15fc <__stack+0xcfd>
    15fa:	4f c0       	rjmp	.+158    	; 0x169a <__stack+0xd9b>
	{
		lcd_gotoxy(20,0);
    15fc:	60 e0       	ldi	r22, 0x00	; 0
    15fe:	84 e1       	ldi	r24, 0x14	; 20
    1600:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1604:	85 e0       	ldi	r24, 0x05	; 5
    1606:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    160a:	60 e0       	ldi	r22, 0x00	; 0
    160c:	85 e1       	ldi	r24, 0x15	; 21
    160e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1612:	85 e0       	ldi	r24, 0x05	; 5
    1614:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1618:	60 e0       	ldi	r22, 0x00	; 0
    161a:	86 e1       	ldi	r24, 0x16	; 22
    161c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1620:	85 e0       	ldi	r24, 0x05	; 5
    1622:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	87 e1       	ldi	r24, 0x17	; 23
    162a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    162e:	85 e0       	ldi	r24, 0x05	; 5
    1630:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    1634:	60 e0       	ldi	r22, 0x00	; 0
    1636:	88 e1       	ldi	r24, 0x18	; 24
    1638:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    163c:	85 e0       	ldi	r24, 0x05	; 5
    163e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    1642:	60 e0       	ldi	r22, 0x00	; 0
    1644:	89 e1       	ldi	r24, 0x19	; 25
    1646:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    164a:	85 e0       	ldi	r24, 0x05	; 5
    164c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1650:	60 e0       	ldi	r22, 0x00	; 0
    1652:	8a e1       	ldi	r24, 0x1A	; 26
    1654:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1658:	85 e0       	ldi	r24, 0x05	; 5
    165a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	8b e1       	ldi	r24, 0x1B	; 27
    1662:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1666:	85 e0       	ldi	r24, 0x05	; 5
    1668:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    166c:	60 e0       	ldi	r22, 0x00	; 0
    166e:	8c e1       	ldi	r24, 0x1C	; 28
    1670:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1674:	85 e0       	ldi	r24, 0x05	; 5
    1676:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    167a:	60 e0       	ldi	r22, 0x00	; 0
    167c:	8d e1       	ldi	r24, 0x1D	; 29
    167e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(1);
    1682:	81 e0       	ldi	r24, 0x01	; 1
    1684:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    1688:	60 e0       	ldi	r22, 0x00	; 0
    168a:	8e e1       	ldi	r24, 0x1E	; 30
    168c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	92 e0       	ldi	r25, 0x02	; 2
    1694:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1698:	08 95       	ret
	}
	else if (distance<=50 && distance>40)
    169a:	9c 01       	movw	r18, r24
    169c:	29 52       	subi	r18, 0x29	; 41
    169e:	31 09       	sbc	r19, r1
    16a0:	2a 30       	cpi	r18, 0x0A	; 10
    16a2:	31 05       	cpc	r19, r1
    16a4:	08 f0       	brcs	.+2      	; 0x16a8 <__stack+0xda9>
    16a6:	4f c0       	rjmp	.+158    	; 0x1746 <__stack+0xe47>
	{
		lcd_gotoxy(20,0);
    16a8:	60 e0       	ldi	r22, 0x00	; 0
    16aa:	84 e1       	ldi	r24, 0x14	; 20
    16ac:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16b0:	85 e0       	ldi	r24, 0x05	; 5
    16b2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    16b6:	60 e0       	ldi	r22, 0x00	; 0
    16b8:	85 e1       	ldi	r24, 0x15	; 21
    16ba:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16be:	85 e0       	ldi	r24, 0x05	; 5
    16c0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    16c4:	60 e0       	ldi	r22, 0x00	; 0
    16c6:	86 e1       	ldi	r24, 0x16	; 22
    16c8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16cc:	85 e0       	ldi	r24, 0x05	; 5
    16ce:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    16d2:	60 e0       	ldi	r22, 0x00	; 0
    16d4:	87 e1       	ldi	r24, 0x17	; 23
    16d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16da:	85 e0       	ldi	r24, 0x05	; 5
    16dc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    16e0:	60 e0       	ldi	r22, 0x00	; 0
    16e2:	88 e1       	ldi	r24, 0x18	; 24
    16e4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16e8:	85 e0       	ldi	r24, 0x05	; 5
    16ea:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    16ee:	60 e0       	ldi	r22, 0x00	; 0
    16f0:	89 e1       	ldi	r24, 0x19	; 25
    16f2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    16f6:	85 e0       	ldi	r24, 0x05	; 5
    16f8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    16fc:	60 e0       	ldi	r22, 0x00	; 0
    16fe:	8a e1       	ldi	r24, 0x1A	; 26
    1700:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1704:	85 e0       	ldi	r24, 0x05	; 5
    1706:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    170a:	60 e0       	ldi	r22, 0x00	; 0
    170c:	8b e1       	ldi	r24, 0x1B	; 27
    170e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1712:	85 e0       	ldi	r24, 0x05	; 5
    1714:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1718:	60 e0       	ldi	r22, 0x00	; 0
    171a:	8c e1       	ldi	r24, 0x1C	; 28
    171c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1720:	85 e0       	ldi	r24, 0x05	; 5
    1722:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1726:	60 e0       	ldi	r22, 0x00	; 0
    1728:	8d e1       	ldi	r24, 0x1D	; 29
    172a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(2);
    172e:	82 e0       	ldi	r24, 0x02	; 2
    1730:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    1734:	60 e0       	ldi	r22, 0x00	; 0
    1736:	8e e1       	ldi	r24, 0x1E	; 30
    1738:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    173c:	81 e0       	ldi	r24, 0x01	; 1
    173e:	92 e0       	ldi	r25, 0x02	; 2
    1740:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1744:	08 95       	ret
	}
	else if (distance<=40 && distance>30)
    1746:	9c 01       	movw	r18, r24
    1748:	2f 51       	subi	r18, 0x1F	; 31
    174a:	31 09       	sbc	r19, r1
    174c:	2a 30       	cpi	r18, 0x0A	; 10
    174e:	31 05       	cpc	r19, r1
    1750:	08 f0       	brcs	.+2      	; 0x1754 <__stack+0xe55>
    1752:	4f c0       	rjmp	.+158    	; 0x17f2 <__stack+0xef3>
	{
		lcd_gotoxy(20,0);
    1754:	60 e0       	ldi	r22, 0x00	; 0
    1756:	84 e1       	ldi	r24, 0x14	; 20
    1758:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    175c:	85 e0       	ldi	r24, 0x05	; 5
    175e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    1762:	60 e0       	ldi	r22, 0x00	; 0
    1764:	85 e1       	ldi	r24, 0x15	; 21
    1766:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    176a:	85 e0       	ldi	r24, 0x05	; 5
    176c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    1770:	60 e0       	ldi	r22, 0x00	; 0
    1772:	86 e1       	ldi	r24, 0x16	; 22
    1774:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1778:	85 e0       	ldi	r24, 0x05	; 5
    177a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    177e:	60 e0       	ldi	r22, 0x00	; 0
    1780:	87 e1       	ldi	r24, 0x17	; 23
    1782:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1786:	85 e0       	ldi	r24, 0x05	; 5
    1788:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    178c:	60 e0       	ldi	r22, 0x00	; 0
    178e:	88 e1       	ldi	r24, 0x18	; 24
    1790:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1794:	85 e0       	ldi	r24, 0x05	; 5
    1796:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    179a:	60 e0       	ldi	r22, 0x00	; 0
    179c:	89 e1       	ldi	r24, 0x19	; 25
    179e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17a2:	85 e0       	ldi	r24, 0x05	; 5
    17a4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    17a8:	60 e0       	ldi	r22, 0x00	; 0
    17aa:	8a e1       	ldi	r24, 0x1A	; 26
    17ac:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17b0:	85 e0       	ldi	r24, 0x05	; 5
    17b2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    17b6:	60 e0       	ldi	r22, 0x00	; 0
    17b8:	8b e1       	ldi	r24, 0x1B	; 27
    17ba:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17be:	85 e0       	ldi	r24, 0x05	; 5
    17c0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	8c e1       	ldi	r24, 0x1C	; 28
    17c8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    17cc:	85 e0       	ldi	r24, 0x05	; 5
    17ce:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    17d2:	60 e0       	ldi	r22, 0x00	; 0
    17d4:	8d e1       	ldi	r24, 0x1D	; 29
    17d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(3);
    17da:	83 e0       	ldi	r24, 0x03	; 3
    17dc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    17e0:	60 e0       	ldi	r22, 0x00	; 0
    17e2:	8e e1       	ldi	r24, 0x1E	; 30
    17e4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	92 e0       	ldi	r25, 0x02	; 2
    17ec:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    17f0:	08 95       	ret
	}
	else if (distance<=30 && distance>20)
    17f2:	9c 01       	movw	r18, r24
    17f4:	25 51       	subi	r18, 0x15	; 21
    17f6:	31 09       	sbc	r19, r1
    17f8:	2a 30       	cpi	r18, 0x0A	; 10
    17fa:	31 05       	cpc	r19, r1
    17fc:	08 f0       	brcs	.+2      	; 0x1800 <__stack+0xf01>
    17fe:	4f c0       	rjmp	.+158    	; 0x189e <__stack+0xf9f>
	{
		lcd_gotoxy(20,0);
    1800:	60 e0       	ldi	r22, 0x00	; 0
    1802:	84 e1       	ldi	r24, 0x14	; 20
    1804:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1808:	85 e0       	ldi	r24, 0x05	; 5
    180a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    180e:	60 e0       	ldi	r22, 0x00	; 0
    1810:	85 e1       	ldi	r24, 0x15	; 21
    1812:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1816:	85 e0       	ldi	r24, 0x05	; 5
    1818:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    181c:	60 e0       	ldi	r22, 0x00	; 0
    181e:	86 e1       	ldi	r24, 0x16	; 22
    1820:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1824:	85 e0       	ldi	r24, 0x05	; 5
    1826:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    182a:	60 e0       	ldi	r22, 0x00	; 0
    182c:	87 e1       	ldi	r24, 0x17	; 23
    182e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1832:	85 e0       	ldi	r24, 0x05	; 5
    1834:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    1838:	60 e0       	ldi	r22, 0x00	; 0
    183a:	88 e1       	ldi	r24, 0x18	; 24
    183c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1840:	85 e0       	ldi	r24, 0x05	; 5
    1842:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    1846:	60 e0       	ldi	r22, 0x00	; 0
    1848:	89 e1       	ldi	r24, 0x19	; 25
    184a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    184e:	85 e0       	ldi	r24, 0x05	; 5
    1850:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    1854:	60 e0       	ldi	r22, 0x00	; 0
    1856:	8a e1       	ldi	r24, 0x1A	; 26
    1858:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    185c:	85 e0       	ldi	r24, 0x05	; 5
    185e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1862:	60 e0       	ldi	r22, 0x00	; 0
    1864:	8b e1       	ldi	r24, 0x1B	; 27
    1866:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    186a:	85 e0       	ldi	r24, 0x05	; 5
    186c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1870:	60 e0       	ldi	r22, 0x00	; 0
    1872:	8c e1       	ldi	r24, 0x1C	; 28
    1874:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1878:	85 e0       	ldi	r24, 0x05	; 5
    187a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    187e:	60 e0       	ldi	r22, 0x00	; 0
    1880:	8d e1       	ldi	r24, 0x1D	; 29
    1882:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(4);
    1886:	84 e0       	ldi	r24, 0x04	; 4
    1888:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    188c:	60 e0       	ldi	r22, 0x00	; 0
    188e:	8e e1       	ldi	r24, 0x1E	; 30
    1890:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    1894:	81 e0       	ldi	r24, 0x01	; 1
    1896:	92 e0       	ldi	r25, 0x02	; 2
    1898:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    189c:	08 95       	ret
	}
	else if (distance<=20)
    189e:	45 97       	sbiw	r24, 0x15	; 21
    18a0:	0c f0       	brlt	.+2      	; 0x18a4 <__stack+0xfa5>
    18a2:	4e c0       	rjmp	.+156    	; 0x1940 <__stack+0x1041>
	{
		lcd_gotoxy(20,0);
    18a4:	60 e0       	ldi	r22, 0x00	; 0
    18a6:	84 e1       	ldi	r24, 0x14	; 20
    18a8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18ac:	85 e0       	ldi	r24, 0x05	; 5
    18ae:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(21,0);
    18b2:	60 e0       	ldi	r22, 0x00	; 0
    18b4:	85 e1       	ldi	r24, 0x15	; 21
    18b6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18ba:	85 e0       	ldi	r24, 0x05	; 5
    18bc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(22,0);
    18c0:	60 e0       	ldi	r22, 0x00	; 0
    18c2:	86 e1       	ldi	r24, 0x16	; 22
    18c4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18c8:	85 e0       	ldi	r24, 0x05	; 5
    18ca:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(23,0);
    18ce:	60 e0       	ldi	r22, 0x00	; 0
    18d0:	87 e1       	ldi	r24, 0x17	; 23
    18d2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18d6:	85 e0       	ldi	r24, 0x05	; 5
    18d8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(24,0);
    18dc:	60 e0       	ldi	r22, 0x00	; 0
    18de:	88 e1       	ldi	r24, 0x18	; 24
    18e0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18e4:	85 e0       	ldi	r24, 0x05	; 5
    18e6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(25,0);
    18ea:	60 e0       	ldi	r22, 0x00	; 0
    18ec:	89 e1       	ldi	r24, 0x19	; 25
    18ee:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    18f2:	85 e0       	ldi	r24, 0x05	; 5
    18f4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(26,0);
    18f8:	60 e0       	ldi	r22, 0x00	; 0
    18fa:	8a e1       	ldi	r24, 0x1A	; 26
    18fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    1900:	85 e0       	ldi	r24, 0x05	; 5
    1902:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(27,0);
    1906:	60 e0       	ldi	r22, 0x00	; 0
    1908:	8b e1       	ldi	r24, 0x1B	; 27
    190a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    190e:	85 e0       	ldi	r24, 0x05	; 5
    1910:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(28,0);
    1914:	60 e0       	ldi	r22, 0x00	; 0
    1916:	8c e1       	ldi	r24, 0x1C	; 28
    1918:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    191c:	85 e0       	ldi	r24, 0x05	; 5
    191e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(29,0);
    1922:	60 e0       	ldi	r22, 0x00	; 0
    1924:	8d e1       	ldi	r24, 0x1D	; 29
    1926:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_putc(5);
    192a:	85 e0       	ldi	r24, 0x05	; 5
    192c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_putc>
		lcd_gotoxy(30,0);
    1930:	60 e0       	ldi	r22, 0x00	; 0
    1932:	8e e1       	ldi	r24, 0x1E	; 30
    1934:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
		lcd_puts("           ");
    1938:	81 e0       	ldi	r24, 0x01	; 1
    193a:	92 e0       	ldi	r25, 0x02	; 2
    193c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
    1940:	08 95       	ret

00001942 <pins_config>:

//initial configuration of pins
void pins_config(void)
{
	//configure LED pins as output
	GPIO_config_output(&DDRC,LED1);
    1942:	61 e0       	ldi	r22, 0x01	; 1
    1944:	87 e2       	ldi	r24, 0x27	; 39
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED2);
    194c:	62 e0       	ldi	r22, 0x02	; 2
    194e:	87 e2       	ldi	r24, 0x27	; 39
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED3);
    1956:	63 e0       	ldi	r22, 0x03	; 3
    1958:	87 e2       	ldi	r24, 0x27	; 39
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED4);
    1960:	64 e0       	ldi	r22, 0x04	; 4
    1962:	87 e2       	ldi	r24, 0x27	; 39
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRC,LED5);
    196a:	65 e0       	ldi	r22, 0x05	; 5
    196c:	87 e2       	ldi	r24, 0x27	; 39
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	
	//configure sound pin as output
	GPIO_config_output(&DDRB, alarm); 
    1974:	64 e0       	ldi	r22, 0x04	; 4
    1976:	84 e2       	ldi	r24, 0x24	; 36
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	
	//configure echo pins as inputs without pull up resistor
	GPIO_config_input_nopull(&DDRD, Front_Echo);
    197e:	63 e0       	ldi	r22, 0x03	; 3
    1980:	8a e2       	ldi	r24, 0x2A	; 42
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	0e 94 5f 00 	call	0xbe	; 0xbe <GPIO_config_input_nopull>
	GPIO_config_input_nopull(&DDRD, Back_Echo);
    1988:	62 e0       	ldi	r22, 0x02	; 2
    198a:	8a e2       	ldi	r24, 0x2A	; 42
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	0e 94 5f 00 	call	0xbe	; 0xbe <GPIO_config_input_nopull>
		
	//configure trigger pins as outputs and set them to low
	GPIO_config_output(&DDRB, Front_trigger);
    1992:	63 e0       	ldi	r22, 0x03	; 3
    1994:	84 e2       	ldi	r24, 0x24	; 36
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_config_output(&DDRB, Back_trigger);
    199c:	62 e0       	ldi	r22, 0x02	; 2
    199e:	84 e2       	ldi	r24, 0x24	; 36
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_write_low(&PORTB, Front_trigger);
    19a6:	63 e0       	ldi	r22, 0x03	; 3
    19a8:	85 e2       	ldi	r24, 0x25	; 37
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTB, Back_trigger);
    19b0:	62 e0       	ldi	r22, 0x02	; 2
    19b2:	85 e2       	ldi	r24, 0x25	; 37
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
		
	//configure alarm as output and turn it off
	GPIO_config_output(&DDRB, alarm);
    19ba:	64 e0       	ldi	r22, 0x04	; 4
    19bc:	84 e2       	ldi	r24, 0x24	; 36
    19be:	90 e0       	ldi	r25, 0x00	; 0
    19c0:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>
	GPIO_write_low(&PORTB, alarm);
    19c4:	64 e0       	ldi	r22, 0x04	; 4
    19c6:	85 e2       	ldi	r24, 0x25	; 37
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
    19ce:	08 95       	ret

000019d0 <lcd_config>:
}

void lcd_config(void)
{
    19d0:	ef 92       	push	r14
    19d2:	ff 92       	push	r15
    19d4:	0f 93       	push	r16
    19d6:	1f 93       	push	r17
    19d8:	cf 93       	push	r28
    19da:	df 93       	push	r29
    19dc:	cd b7       	in	r28, 0x3d	; 61
    19de:	de b7       	in	r29, 0x3e	; 62
    19e0:	e0 97       	sbiw	r28, 0x30	; 48
    19e2:	0f b6       	in	r0, 0x3f	; 63
    19e4:	f8 94       	cli
    19e6:	de bf       	out	0x3e, r29	; 62
    19e8:	0f be       	out	0x3f, r0	; 63
    19ea:	cd bf       	out	0x3d, r28	; 61
	//array of custom characters representing different stages of progress on one segment of load bar
	uint8_t customChar[] = 
    19ec:	80 e3       	ldi	r24, 0x30	; 48
    19ee:	e0 e0       	ldi	r30, 0x00	; 0
    19f0:	f1 e0       	ldi	r31, 0x01	; 1
    19f2:	de 01       	movw	r26, r28
    19f4:	11 96       	adiw	r26, 0x01	; 1
    19f6:	01 90       	ld	r0, Z+
    19f8:	0d 92       	st	X+, r0
    19fa:	8a 95       	dec	r24
    19fc:	e1 f7       	brne	.-8      	; 0x19f6 <lcd_config+0x26>
		// addr 5: |||||
		0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111,
	};
		
	//initialize LCD, display strings that do not change
	lcd_init(LCD_DISP_ON);
    19fe:	8c e0       	ldi	r24, 0x0C	; 12
    1a00:	0e 94 04 01 	call	0x208	; 0x208 <lcd_init>
	lcd_gotoxy(1, 0);
    1a04:	60 e0       	ldi	r22, 0x00	; 0
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
	lcd_puts("dist_front:");
    1a0c:	8d e0       	ldi	r24, 0x0D	; 13
    1a0e:	92 e0       	ldi	r25, 0x02	; 2
    1a10:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
	lcd_gotoxy(1, 2);
    1a14:	62 e0       	ldi	r22, 0x02	; 2
    1a16:	81 e0       	ldi	r24, 0x01	; 1
    1a18:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_gotoxy>
	lcd_puts("dist_back :");
    1a1c:	89 e1       	ldi	r24, 0x19	; 25
    1a1e:	92 e0       	ldi	r25, 0x02	; 2
    1a20:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_puts>
		
	//set pointer at beginning of CGRAM
	lcd_command(1 << LCD_CGRAM);
    1a24:	80 e4       	ldi	r24, 0x40	; 64
    1a26:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
    1a2a:	8e 01       	movw	r16, r28
    1a2c:	0f 5f       	subi	r16, 0xFF	; 255
    1a2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a30:	7e 01       	movw	r14, r28
    1a32:	81 e3       	ldi	r24, 0x31	; 49
    1a34:	e8 0e       	add	r14, r24
    1a36:	f1 1c       	adc	r15, r1
	for (uint8_t i = 0; i < 48; i++)
	{
		// Store all new chars to memory line by line
		lcd_data(customChar[i]);
    1a38:	f8 01       	movw	r30, r16
    1a3a:	81 91       	ld	r24, Z+
    1a3c:	8f 01       	movw	r16, r30
    1a3e:	0e 94 de 00 	call	0x1bc	; 0x1bc <lcd_data>
	lcd_gotoxy(1, 2);
	lcd_puts("dist_back :");
		
	//set pointer at beginning of CGRAM
	lcd_command(1 << LCD_CGRAM);
	for (uint8_t i = 0; i < 48; i++)
    1a42:	0e 15       	cp	r16, r14
    1a44:	1f 05       	cpc	r17, r15
    1a46:	c1 f7       	brne	.-16     	; 0x1a38 <lcd_config+0x68>
		// Store all new chars to memory line by line
		lcd_data(customChar[i]);
	}
	
	// Set DDRAM address
	lcd_command(1 << LCD_DDRAM);
    1a48:	80 e8       	ldi	r24, 0x80	; 128
    1a4a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <lcd_command>
	

}
    1a4e:	e0 96       	adiw	r28, 0x30	; 48
    1a50:	0f b6       	in	r0, 0x3f	; 63
    1a52:	f8 94       	cli
    1a54:	de bf       	out	0x3e, r29	; 62
    1a56:	0f be       	out	0x3f, r0	; 63
    1a58:	cd bf       	out	0x3d, r28	; 61
    1a5a:	df 91       	pop	r29
    1a5c:	cf 91       	pop	r28
    1a5e:	1f 91       	pop	r17
    1a60:	0f 91       	pop	r16
    1a62:	ff 90       	pop	r15
    1a64:	ef 90       	pop	r14
    1a66:	08 95       	ret

00001a68 <LEDs_off>:

//turn all LEDs off
void LEDs_off(void)
{
	GPIO_write_low(&PORTC, LED1);
    1a68:	61 e0       	ldi	r22, 0x01	; 1
    1a6a:	88 e2       	ldi	r24, 0x28	; 40
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED2);
    1a72:	62 e0       	ldi	r22, 0x02	; 2
    1a74:	88 e2       	ldi	r24, 0x28	; 40
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED3);
    1a7c:	63 e0       	ldi	r22, 0x03	; 3
    1a7e:	88 e2       	ldi	r24, 0x28	; 40
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED4);
    1a86:	64 e0       	ldi	r22, 0x04	; 4
    1a88:	88 e2       	ldi	r24, 0x28	; 40
    1a8a:	90 e0       	ldi	r25, 0x00	; 0
    1a8c:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
	GPIO_write_low(&PORTC, LED5);
    1a90:	65 e0       	ldi	r22, 0x05	; 5
    1a92:	88 e2       	ldi	r24, 0x28	; 40
    1a94:	90 e0       	ldi	r25, 0x00	; 0
    1a96:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
    1a9a:	08 95       	ret

00001a9c <LED_toggle>:
}

//togggles number of leds on led stripe
void LED_toggle(int number_of_LEDs)
{
	switch(number_of_LEDs)
    1a9c:	83 30       	cpi	r24, 0x03	; 3
    1a9e:	91 05       	cpc	r25, r1
    1aa0:	f1 f0       	breq	.+60     	; 0x1ade <LED_toggle+0x42>
    1aa2:	34 f4       	brge	.+12     	; 0x1ab0 <LED_toggle+0x14>
    1aa4:	81 30       	cpi	r24, 0x01	; 1
    1aa6:	91 05       	cpc	r25, r1
    1aa8:	49 f0       	breq	.+18     	; 0x1abc <LED_toggle+0x20>
    1aaa:	02 97       	sbiw	r24, 0x02	; 2
    1aac:	69 f0       	breq	.+26     	; 0x1ac8 <LED_toggle+0x2c>
    1aae:	08 95       	ret
    1ab0:	84 30       	cpi	r24, 0x04	; 4
    1ab2:	91 05       	cpc	r25, r1
    1ab4:	21 f1       	breq	.+72     	; 0x1afe <LED_toggle+0x62>
    1ab6:	05 97       	sbiw	r24, 0x05	; 5
    1ab8:	b9 f1       	breq	.+110    	; 0x1b28 <LED_toggle+0x8c>
    1aba:	08 95       	ret
	{
		case 1:
			GPIO_toggle(&PORTC, LED1);
    1abc:	61 e0       	ldi	r22, 0x01	; 1
    1abe:	88 e2       	ldi	r24, 0x28	; 40
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1ac6:	08 95       	ret
		case 2:
			GPIO_toggle(&PORTC, LED1);
    1ac8:	61 e0       	ldi	r22, 0x01	; 1
    1aca:	88 e2       	ldi	r24, 0x28	; 40
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1ad2:	62 e0       	ldi	r22, 0x02	; 2
    1ad4:	88 e2       	ldi	r24, 0x28	; 40
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1adc:	08 95       	ret
		case 3:
			GPIO_toggle(&PORTC, LED1);
    1ade:	61 e0       	ldi	r22, 0x01	; 1
    1ae0:	88 e2       	ldi	r24, 0x28	; 40
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1ae8:	62 e0       	ldi	r22, 0x02	; 2
    1aea:	88 e2       	ldi	r24, 0x28	; 40
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED3);
    1af2:	63 e0       	ldi	r22, 0x03	; 3
    1af4:	88 e2       	ldi	r24, 0x28	; 40
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1afc:	08 95       	ret
		case 4:
			GPIO_toggle(&PORTC, LED1);
    1afe:	61 e0       	ldi	r22, 0x01	; 1
    1b00:	88 e2       	ldi	r24, 0x28	; 40
    1b02:	90 e0       	ldi	r25, 0x00	; 0
    1b04:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1b08:	62 e0       	ldi	r22, 0x02	; 2
    1b0a:	88 e2       	ldi	r24, 0x28	; 40
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED3);
    1b12:	63 e0       	ldi	r22, 0x03	; 3
    1b14:	88 e2       	ldi	r24, 0x28	; 40
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED4);
    1b1c:	64 e0       	ldi	r22, 0x04	; 4
    1b1e:	88 e2       	ldi	r24, 0x28	; 40
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			break;
    1b26:	08 95       	ret
		case 5:
			GPIO_toggle(&PORTC, LED1);
    1b28:	61 e0       	ldi	r22, 0x01	; 1
    1b2a:	88 e2       	ldi	r24, 0x28	; 40
    1b2c:	90 e0       	ldi	r25, 0x00	; 0
    1b2e:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED2);
    1b32:	62 e0       	ldi	r22, 0x02	; 2
    1b34:	88 e2       	ldi	r24, 0x28	; 40
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED3);
    1b3c:	63 e0       	ldi	r22, 0x03	; 3
    1b3e:	88 e2       	ldi	r24, 0x28	; 40
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED4);
    1b46:	64 e0       	ldi	r22, 0x04	; 4
    1b48:	88 e2       	ldi	r24, 0x28	; 40
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
			GPIO_toggle(&PORTC, LED5);
    1b50:	65 e0       	ldi	r22, 0x05	; 5
    1b52:	88 e2       	ldi	r24, 0x28	; 40
    1b54:	90 e0       	ldi	r25, 0x00	; 0
    1b56:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
    1b5a:	08 95       	ret

00001b5c <main>:
volatile float distances[] = {0,0};		//distance[0]=distance to front sensor distance[1]=distance to back sensor
char lcd_string[50];					//for displaying data on lcd

int main(void)
{
	lcd_config();	//initial configuration of LCD display
    1b5c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <lcd_config>
	
	uart_init(UART_BAUD_SELECT(9600,F_CPU));	//initialize UART		
    1b60:	87 e6       	ldi	r24, 0x67	; 103
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <uart_init>
	
	pins_config();	//initial configuration of pins
    1b68:	0e 94 a1 0c 	call	0x1942	; 0x1942 <pins_config>
						
	LEDs_off();		//turn LEDs off				
    1b6c:	0e 94 34 0d 	call	0x1a68	; 0x1a68 <LEDs_off>
	
	//enable overflow interrupt and set default value
	TIM2_overflow_16ms();
    1b70:	e1 eb       	ldi	r30, 0xB1	; 177
    1b72:	f0 e0       	ldi	r31, 0x00	; 0
    1b74:	80 81       	ld	r24, Z
    1b76:	87 60       	ori	r24, 0x07	; 7
    1b78:	80 83       	st	Z, r24
	TIM2_overflow_interrupt_enable();
    1b7a:	e0 e7       	ldi	r30, 0x70	; 112
    1b7c:	f0 e0       	ldi	r31, 0x00	; 0
    1b7e:	80 81       	ld	r24, Z
    1b80:	81 60       	ori	r24, 0x01	; 1
    1b82:	80 83       	st	Z, r24
	
	//Rising edge of INT1 generates an interrupt request
	EICRA |= (1 << ISC11) | (1 << ISC10);   
    1b84:	e9 e6       	ldi	r30, 0x69	; 105
    1b86:	f0 e0       	ldi	r31, 0x00	; 0
    1b88:	80 81       	ld	r24, Z
    1b8a:	8c 60       	ori	r24, 0x0C	; 12
    1b8c:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);
    1b8e:	e9 9a       	sbi	0x1d, 1	; 29
	
	//Rising edge of INT0 generates an interrupt request
	EICRA |= (1 << ISC01) | (1 << ISC00);
    1b90:	80 81       	ld	r24, Z
    1b92:	83 60       	ori	r24, 0x03	; 3
    1b94:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);
    1b96:	e8 9a       	sbi	0x1d, 0	; 29
	
	sei(); //enable interrupts
    1b98:	78 94       	sei
		}

		int smaller_distance = 1;	//for saving the smaller distance of the 2 sensors
		
		//choose smaller distance
		if(distances[0] > distances[1])
    1b9a:	06 e2       	ldi	r16, 0x26	; 38
    1b9c:	12 e0       	ldi	r17, 0x02	; 2
		Uart_info(distances);								//interesting info to uart
		
		//change sensor id for next loop
		if (sensor_id==0)
		{
			sensor_id=1;
    1b9e:	ff 24       	eor	r15, r15
    1ba0:	f3 94       	inc	r15
	
	sei(); //enable interrupts
	
    while (1) 
    {	
		if (sensor_id == 1)
    1ba2:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <sensor_id>
    1ba6:	81 30       	cpi	r24, 0x01	; 1
    1ba8:	c1 f4       	brne	.+48     	; 0x1bda <main+0x7e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1baa:	2f ef       	ldi	r18, 0xFF	; 255
    1bac:	8d ee       	ldi	r24, 0xED	; 237
    1bae:	92 e0       	ldi	r25, 0x02	; 2
    1bb0:	21 50       	subi	r18, 0x01	; 1
    1bb2:	80 40       	sbci	r24, 0x00	; 0
    1bb4:	90 40       	sbci	r25, 0x00	; 0
    1bb6:	e1 f7       	brne	.-8      	; 0x1bb0 <main+0x54>
    1bb8:	00 c0       	rjmp	.+0      	; 0x1bba <main+0x5e>
    1bba:	00 00       	nop
		{
			_delay_ms(60);							//ensure one cycle lasts minimum 50us
			GPIO_write_high(&PORTB,Back_trigger);	//
    1bbc:	62 e0       	ldi	r22, 0x02	; 2
    1bbe:	85 e2       	ldi	r24, 0x25	; 37
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	0e 94 7d 00 	call	0xfa	; 0xfa <GPIO_write_high>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1bc6:	e5 e3       	ldi	r30, 0x35	; 53
    1bc8:	ea 95       	dec	r30
    1bca:	f1 f7       	brne	.-4      	; 0x1bc8 <main+0x6c>
    1bcc:	00 00       	nop
			_delay_us(10);							//send start pulse (10us) to back sensor
			GPIO_write_low(&PORTB,Back_trigger);	//		   
    1bce:	62 e0       	ldi	r22, 0x02	; 2
    1bd0:	85 e2       	ldi	r24, 0x25	; 37
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
    1bd8:	17 c0       	rjmp	.+46     	; 0x1c08 <main+0xac>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1bda:	ff ef       	ldi	r31, 0xFF	; 255
    1bdc:	2d ee       	ldi	r18, 0xED	; 237
    1bde:	82 e0       	ldi	r24, 0x02	; 2
    1be0:	f1 50       	subi	r31, 0x01	; 1
    1be2:	20 40       	sbci	r18, 0x00	; 0
    1be4:	80 40       	sbci	r24, 0x00	; 0
    1be6:	e1 f7       	brne	.-8      	; 0x1be0 <main+0x84>
    1be8:	00 c0       	rjmp	.+0      	; 0x1bea <main+0x8e>
    1bea:	00 00       	nop
		}
		else
		{
			_delay_ms(60);							//ensure one cycle lasts minimum 50us			
			GPIO_write_high(&PORTB,Front_trigger);	//
    1bec:	63 e0       	ldi	r22, 0x03	; 3
    1bee:	85 e2       	ldi	r24, 0x25	; 37
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	0e 94 7d 00 	call	0xfa	; 0xfa <GPIO_write_high>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1bf6:	95 e3       	ldi	r25, 0x35	; 53
    1bf8:	9a 95       	dec	r25
    1bfa:	f1 f7       	brne	.-4      	; 0x1bf8 <main+0x9c>
    1bfc:	00 00       	nop
			_delay_us(10);							//send start pulse (10us) to front sensor
			GPIO_write_low(&PORTB,Front_trigger);	//
    1bfe:	63 e0       	ldi	r22, 0x03	; 3
    1c00:	85 e2       	ldi	r24, 0x25	; 37
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
		}

		int smaller_distance = 1;	//for saving the smaller distance of the 2 sensors
		
		//choose smaller distance
		if(distances[0] > distances[1])
    1c08:	f8 01       	movw	r30, r16
    1c0a:	60 81       	ld	r22, Z
    1c0c:	71 81       	ldd	r23, Z+1	; 0x01
    1c0e:	82 81       	ldd	r24, Z+2	; 0x02
    1c10:	93 81       	ldd	r25, Z+3	; 0x03
    1c12:	24 81       	ldd	r18, Z+4	; 0x04
    1c14:	35 81       	ldd	r19, Z+5	; 0x05
    1c16:	46 81       	ldd	r20, Z+6	; 0x06
    1c18:	57 81       	ldd	r21, Z+7	; 0x07
    1c1a:	0e 94 2f 11 	call	0x225e	; 0x225e <__gesf2>
    1c1e:	18 16       	cp	r1, r24
    1c20:	4c f4       	brge	.+18     	; 0x1c34 <main+0xd8>
		{
			smaller_distance = distances[1];	
    1c22:	f8 01       	movw	r30, r16
    1c24:	64 81       	ldd	r22, Z+4	; 0x04
    1c26:	75 81       	ldd	r23, Z+5	; 0x05
    1c28:	86 81       	ldd	r24, Z+6	; 0x06
    1c2a:	97 81       	ldd	r25, Z+7	; 0x07
    1c2c:	0e 94 84 10 	call	0x2108	; 0x2108 <__fixsfsi>
    1c30:	eb 01       	movw	r28, r22
    1c32:	08 c0       	rjmp	.+16     	; 0x1c44 <main+0xe8>
		}
		else
		{
			smaller_distance = distances[0];	
    1c34:	f8 01       	movw	r30, r16
    1c36:	60 81       	ld	r22, Z
    1c38:	71 81       	ldd	r23, Z+1	; 0x01
    1c3a:	82 81       	ldd	r24, Z+2	; 0x02
    1c3c:	93 81       	ldd	r25, Z+3	; 0x03
    1c3e:	0e 94 84 10 	call	0x2108	; 0x2108 <__fixsfsi>
    1c42:	eb 01       	movw	r28, r22
		}
		
		
		Load_bar(smaller_distance);							//update load bar based on smaller distance
    1c44:	ce 01       	movw	r24, r28
    1c46:	0e 94 5f 02 	call	0x4be	; 0x4be <Load_bar>
		
		GPIO_write_low(&PORTB, alarm);						//set frequency signaling diode to low
    1c4a:	64 e0       	ldi	r22, 0x04	; 4
    1c4c:	85 e2       	ldi	r24, 0x25	; 37
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	0e 94 70 00 	call	0xe0	; 0xe0 <GPIO_write_low>
						
		Update_warning(smaller_distance);					//update warning message on lcd and led stripe based on smaller distance	
    1c54:	ce 01       	movw	r24, r28
    1c56:	0e 94 9e 01 	call	0x33c	; 0x33c <Update_warning>
	
		distances[sensor_id]=distances[sensor_id]*(0.15085);	//convert to cm
    1c5a:	c0 91 2e 02 	lds	r28, 0x022E	; 0x80022e <sensor_id>
    1c5e:	d0 e0       	ldi	r29, 0x00	; 0
    1c60:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <sensor_id>
    1c64:	f0 e0       	ldi	r31, 0x00	; 0
    1c66:	ee 0f       	add	r30, r30
    1c68:	ff 1f       	adc	r31, r31
    1c6a:	ee 0f       	add	r30, r30
    1c6c:	ff 1f       	adc	r31, r31
    1c6e:	ea 5d       	subi	r30, 0xDA	; 218
    1c70:	fd 4f       	sbci	r31, 0xFD	; 253
    1c72:	60 81       	ld	r22, Z
    1c74:	71 81       	ldd	r23, Z+1	; 0x01
    1c76:	82 81       	ldd	r24, Z+2	; 0x02
    1c78:	93 81       	ldd	r25, Z+3	; 0x03
    1c7a:	2c e6       	ldi	r18, 0x6C	; 108
    1c7c:	38 e7       	ldi	r19, 0x78	; 120
    1c7e:	4a e1       	ldi	r20, 0x1A	; 26
    1c80:	5e e3       	ldi	r21, 0x3E	; 62
    1c82:	0e 94 34 11 	call	0x2268	; 0x2268 <__mulsf3>
    1c86:	cc 0f       	add	r28, r28
    1c88:	dd 1f       	adc	r29, r29
    1c8a:	cc 0f       	add	r28, r28
    1c8c:	dd 1f       	adc	r29, r29
    1c8e:	ca 5d       	subi	r28, 0xDA	; 218
    1c90:	dd 4f       	sbci	r29, 0xFD	; 253
    1c92:	68 83       	st	Y, r22
    1c94:	79 83       	std	Y+1, r23	; 0x01
    1c96:	8a 83       	std	Y+2, r24	; 0x02
    1c98:	9b 83       	std	Y+3, r25	; 0x03
		
		itoa(distances[sensor_id], lcd_string, 10);			// Convert decimal value to string
    1c9a:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <sensor_id>
    1c9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ca0:	ee 0f       	add	r30, r30
    1ca2:	ff 1f       	adc	r31, r31
    1ca4:	ee 0f       	add	r30, r30
    1ca6:	ff 1f       	adc	r31, r31
    1ca8:	ea 5d       	subi	r30, 0xDA	; 218
    1caa:	fd 4f       	sbci	r31, 0xFD	; 253
    1cac:	60 81       	ld	r22, Z
    1cae:	71 81       	ldd	r23, Z+1	; 0x01
    1cb0:	82 81       	ldd	r24, Z+2	; 0x02
    1cb2:	93 81       	ldd	r25, Z+3	; 0x03
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    1cb4:	0e 94 84 10 	call	0x2108	; 0x2108 <__fixsfsi>
    1cb8:	dc 01       	movw	r26, r24
    1cba:	cb 01       	movw	r24, r22
    1cbc:	4a e0       	ldi	r20, 0x0A	; 10
    1cbe:	64 e7       	ldi	r22, 0x74	; 116
    1cc0:	72 e0       	ldi	r23, 0x02	; 2
    1cc2:	0e 94 a1 11 	call	0x2342	; 0x2342 <__itoa_ncheck>
		
		Display_dist(sensor_id,distances,lcd_string);		//display distance on lcd
    1cc6:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <sensor_id>
    1cca:	44 e7       	ldi	r20, 0x74	; 116
    1ccc:	52 e0       	ldi	r21, 0x02	; 2
    1cce:	b8 01       	movw	r22, r16
    1cd0:	0e 94 46 01 	call	0x28c	; 0x28c <Display_dist>
		
		Uart_info(distances);								//interesting info to uart
    1cd4:	c8 01       	movw	r24, r16
    1cd6:	0e 94 16 02 	call	0x42c	; 0x42c <Uart_info>
		
		//change sensor id for next loop
		if (sensor_id==0)
    1cda:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <sensor_id>
    1cde:	81 11       	cpse	r24, r1
    1ce0:	03 c0       	rjmp	.+6      	; 0x1ce8 <main+0x18c>
		{
			sensor_id=1;
    1ce2:	f0 92 2e 02 	sts	0x022E, r15	; 0x80022e <sensor_id>
    1ce6:	5d cf       	rjmp	.-326    	; 0x1ba2 <main+0x46>
		}
		else
		{
			sensor_id=0;
    1ce8:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <sensor_id>
    1cec:	5a cf       	rjmp	.-332    	; 0x1ba2 <main+0x46>

00001cee <__vector_2>:
	}	
}

//interrupt iterates as long as echo signal from front sensor is 1
ISR(INT1_vect)
{
    1cee:	1f 92       	push	r1
    1cf0:	0f 92       	push	r0
    1cf2:	0f b6       	in	r0, 0x3f	; 63
    1cf4:	0f 92       	push	r0
    1cf6:	11 24       	eor	r1, r1
    1cf8:	2f 93       	push	r18
    1cfa:	3f 93       	push	r19
    1cfc:	4f 93       	push	r20
    1cfe:	5f 93       	push	r21
    1d00:	6f 93       	push	r22
    1d02:	7f 93       	push	r23
    1d04:	8f 93       	push	r24
    1d06:	9f 93       	push	r25
    1d08:	af 93       	push	r26
    1d0a:	bf 93       	push	r27
    1d0c:	cf 93       	push	r28
    1d0e:	df 93       	push	r29
    1d10:	ef 93       	push	r30
    1d12:	ff 93       	push	r31
	do
	{
		distances[0]++;						//keep counting
    1d14:	c6 e2       	ldi	r28, 0x26	; 38
    1d16:	d2 e0       	ldi	r29, 0x02	; 2
    1d18:	68 81       	ld	r22, Y
    1d1a:	79 81       	ldd	r23, Y+1	; 0x01
    1d1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	30 e0       	ldi	r19, 0x00	; 0
    1d24:	40 e8       	ldi	r20, 0x80	; 128
    1d26:	5f e3       	ldi	r21, 0x3F	; 63
    1d28:	0e 94 13 10 	call	0x2026	; 0x2026 <__addsf3>
    1d2c:	68 83       	st	Y, r22
    1d2e:	79 83       	std	Y+1, r23	; 0x01
    1d30:	8a 83       	std	Y+2, r24	; 0x02
    1d32:	9b 83       	std	Y+3, r25	; 0x03
	} while (GPIO_read(&PIND,Front_Echo));	//until echo is 0
    1d34:	63 e0       	ldi	r22, 0x03	; 3
    1d36:	89 e2       	ldi	r24, 0x29	; 41
    1d38:	90 e0       	ldi	r25, 0x00	; 0
    1d3a:	0e 94 95 00 	call	0x12a	; 0x12a <GPIO_read>
    1d3e:	81 11       	cpse	r24, r1
    1d40:	eb cf       	rjmp	.-42     	; 0x1d18 <__vector_2+0x2a>
}
    1d42:	ff 91       	pop	r31
    1d44:	ef 91       	pop	r30
    1d46:	df 91       	pop	r29
    1d48:	cf 91       	pop	r28
    1d4a:	bf 91       	pop	r27
    1d4c:	af 91       	pop	r26
    1d4e:	9f 91       	pop	r25
    1d50:	8f 91       	pop	r24
    1d52:	7f 91       	pop	r23
    1d54:	6f 91       	pop	r22
    1d56:	5f 91       	pop	r21
    1d58:	4f 91       	pop	r20
    1d5a:	3f 91       	pop	r19
    1d5c:	2f 91       	pop	r18
    1d5e:	0f 90       	pop	r0
    1d60:	0f be       	out	0x3f, r0	; 63
    1d62:	0f 90       	pop	r0
    1d64:	1f 90       	pop	r1
    1d66:	18 95       	reti

00001d68 <__vector_1>:

//interrupt iterates as long as echo signal from back sensor is 1
ISR(INT0_vect)
{
    1d68:	1f 92       	push	r1
    1d6a:	0f 92       	push	r0
    1d6c:	0f b6       	in	r0, 0x3f	; 63
    1d6e:	0f 92       	push	r0
    1d70:	11 24       	eor	r1, r1
    1d72:	2f 93       	push	r18
    1d74:	3f 93       	push	r19
    1d76:	4f 93       	push	r20
    1d78:	5f 93       	push	r21
    1d7a:	6f 93       	push	r22
    1d7c:	7f 93       	push	r23
    1d7e:	8f 93       	push	r24
    1d80:	9f 93       	push	r25
    1d82:	af 93       	push	r26
    1d84:	bf 93       	push	r27
    1d86:	cf 93       	push	r28
    1d88:	df 93       	push	r29
    1d8a:	ef 93       	push	r30
    1d8c:	ff 93       	push	r31
	do
	{
		distances[1]++;						//keep counting
    1d8e:	c6 e2       	ldi	r28, 0x26	; 38
    1d90:	d2 e0       	ldi	r29, 0x02	; 2
    1d92:	6c 81       	ldd	r22, Y+4	; 0x04
    1d94:	7d 81       	ldd	r23, Y+5	; 0x05
    1d96:	8e 81       	ldd	r24, Y+6	; 0x06
    1d98:	9f 81       	ldd	r25, Y+7	; 0x07
    1d9a:	20 e0       	ldi	r18, 0x00	; 0
    1d9c:	30 e0       	ldi	r19, 0x00	; 0
    1d9e:	40 e8       	ldi	r20, 0x80	; 128
    1da0:	5f e3       	ldi	r21, 0x3F	; 63
    1da2:	0e 94 13 10 	call	0x2026	; 0x2026 <__addsf3>
    1da6:	6c 83       	std	Y+4, r22	; 0x04
    1da8:	7d 83       	std	Y+5, r23	; 0x05
    1daa:	8e 83       	std	Y+6, r24	; 0x06
    1dac:	9f 83       	std	Y+7, r25	; 0x07
	} while (GPIO_read(&PIND,Back_Echo));	//until echo is 0
    1dae:	62 e0       	ldi	r22, 0x02	; 2
    1db0:	89 e2       	ldi	r24, 0x29	; 41
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	0e 94 95 00 	call	0x12a	; 0x12a <GPIO_read>
    1db8:	81 11       	cpse	r24, r1
    1dba:	eb cf       	rjmp	.-42     	; 0x1d92 <__vector_1+0x2a>
}
    1dbc:	ff 91       	pop	r31
    1dbe:	ef 91       	pop	r30
    1dc0:	df 91       	pop	r29
    1dc2:	cf 91       	pop	r28
    1dc4:	bf 91       	pop	r27
    1dc6:	af 91       	pop	r26
    1dc8:	9f 91       	pop	r25
    1dca:	8f 91       	pop	r24
    1dcc:	7f 91       	pop	r23
    1dce:	6f 91       	pop	r22
    1dd0:	5f 91       	pop	r21
    1dd2:	4f 91       	pop	r20
    1dd4:	3f 91       	pop	r19
    1dd6:	2f 91       	pop	r18
    1dd8:	0f 90       	pop	r0
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	0f 90       	pop	r0
    1dde:	1f 90       	pop	r1
    1de0:	18 95       	reti

00001de2 <__vector_9>:

ISR(TIMER2_OVF_vect)
{
    1de2:	1f 92       	push	r1
    1de4:	0f 92       	push	r0
    1de6:	0f b6       	in	r0, 0x3f	; 63
    1de8:	0f 92       	push	r0
    1dea:	11 24       	eor	r1, r1
    1dec:	2f 93       	push	r18
    1dee:	3f 93       	push	r19
    1df0:	4f 93       	push	r20
    1df2:	5f 93       	push	r21
    1df4:	6f 93       	push	r22
    1df6:	7f 93       	push	r23
    1df8:	8f 93       	push	r24
    1dfa:	9f 93       	push	r25
    1dfc:	af 93       	push	r26
    1dfe:	bf 93       	push	r27
    1e00:	ef 93       	push	r30
    1e02:	ff 93       	push	r31
	int freq = 50;  //for saving closer distance
	
	//flick the led if in range for flicking
	if (freq<=100)
	{
		GPIO_toggle(&PORTB, alarm);
    1e04:	64 e0       	ldi	r22, 0x04	; 4
    1e06:	85 e2       	ldi	r24, 0x25	; 37
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_toggle>
	}	
	
	//choose smaller distance
	if(distances[0] >= distances[1])
    1e0e:	e6 e2       	ldi	r30, 0x26	; 38
    1e10:	f2 e0       	ldi	r31, 0x02	; 2
    1e12:	60 81       	ld	r22, Z
    1e14:	71 81       	ldd	r23, Z+1	; 0x01
    1e16:	82 81       	ldd	r24, Z+2	; 0x02
    1e18:	93 81       	ldd	r25, Z+3	; 0x03
    1e1a:	24 81       	ldd	r18, Z+4	; 0x04
    1e1c:	35 81       	ldd	r19, Z+5	; 0x05
    1e1e:	46 81       	ldd	r20, Z+6	; 0x06
    1e20:	57 81       	ldd	r21, Z+7	; 0x07
    1e22:	0e 94 2f 11 	call	0x225e	; 0x225e <__gesf2>
    1e26:	88 23       	and	r24, r24
    1e28:	5c f0       	brlt	.+22     	; 0x1e40 <__vector_9+0x5e>
	{
		freq = distances[1];
    1e2a:	60 91 2a 02 	lds	r22, 0x022A	; 0x80022a <__data_end+0x4>
    1e2e:	70 91 2b 02 	lds	r23, 0x022B	; 0x80022b <__data_end+0x5>
    1e32:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <__data_end+0x6>
    1e36:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <__data_end+0x7>
    1e3a:	0e 94 84 10 	call	0x2108	; 0x2108 <__fixsfsi>
    1e3e:	0a c0       	rjmp	.+20     	; 0x1e54 <__vector_9+0x72>
	}
	else
	{
		freq = distances[0];
    1e40:	60 91 26 02 	lds	r22, 0x0226	; 0x800226 <__data_end>
    1e44:	70 91 27 02 	lds	r23, 0x0227	; 0x800227 <__data_end+0x1>
    1e48:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__data_end+0x2>
    1e4c:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <__data_end+0x3>
    1e50:	0e 94 84 10 	call	0x2108	; 0x2108 <__fixsfsi>
	}
	
	//select frequency of signal led based on smaller distance
	if (freq <= 100 && freq > 75)
    1e54:	cb 01       	movw	r24, r22
    1e56:	9b 01       	movw	r18, r22
    1e58:	2c 54       	subi	r18, 0x4C	; 76
    1e5a:	31 09       	sbc	r19, r1
    1e5c:	29 31       	cpi	r18, 0x19	; 25
    1e5e:	31 05       	cpc	r19, r1
    1e60:	30 f4       	brcc	.+12     	; 0x1e6e <__vector_9+0x8c>
	{
		TIM2_overflow_16ms();		//f = 30.5 Hz	
    1e62:	e1 eb       	ldi	r30, 0xB1	; 177
    1e64:	f0 e0       	ldi	r31, 0x00	; 0
    1e66:	80 81       	ld	r24, Z
    1e68:	87 60       	ori	r24, 0x07	; 7
    1e6a:	80 83       	st	Z, r24
    1e6c:	35 c0       	rjmp	.+106    	; 0x1ed8 <__vector_9+0xf6>
	}
	else if (freq <= 75 && freq > 50)
    1e6e:	9b 01       	movw	r18, r22
    1e70:	23 53       	subi	r18, 0x33	; 51
    1e72:	31 09       	sbc	r19, r1
    1e74:	29 31       	cpi	r18, 0x19	; 25
    1e76:	31 05       	cpc	r19, r1
    1e78:	48 f4       	brcc	.+18     	; 0x1e8c <__vector_9+0xaa>
	{
		TIM2_overflow_4ms();		//f = 125 Hz
    1e7a:	e1 eb       	ldi	r30, 0xB1	; 177
    1e7c:	f0 e0       	ldi	r31, 0x00	; 0
    1e7e:	80 81       	ld	r24, Z
    1e80:	8e 7f       	andi	r24, 0xFE	; 254
    1e82:	80 83       	st	Z, r24
    1e84:	80 81       	ld	r24, Z
    1e86:	86 60       	ori	r24, 0x06	; 6
    1e88:	80 83       	st	Z, r24
    1e8a:	26 c0       	rjmp	.+76     	; 0x1ed8 <__vector_9+0xf6>
	}
	else if (freq <= 50 && freq > 25)
    1e8c:	9b 01       	movw	r18, r22
    1e8e:	2a 51       	subi	r18, 0x1A	; 26
    1e90:	31 09       	sbc	r19, r1
    1e92:	29 31       	cpi	r18, 0x19	; 25
    1e94:	31 05       	cpc	r19, r1
    1e96:	48 f4       	brcc	.+18     	; 0x1eaa <__vector_9+0xc8>
	{
		TIM2_overflow_2ms();		//f = 250 Hz
    1e98:	e1 eb       	ldi	r30, 0xB1	; 177
    1e9a:	f0 e0       	ldi	r31, 0x00	; 0
    1e9c:	80 81       	ld	r24, Z
    1e9e:	8d 7f       	andi	r24, 0xFD	; 253
    1ea0:	80 83       	st	Z, r24
    1ea2:	80 81       	ld	r24, Z
    1ea4:	85 60       	ori	r24, 0x05	; 5
    1ea6:	80 83       	st	Z, r24
    1ea8:	17 c0       	rjmp	.+46     	; 0x1ed8 <__vector_9+0xf6>
	}
	else if (freq <= 25 && freq > 10)
    1eaa:	0b 97       	sbiw	r24, 0x0b	; 11
    1eac:	0f 97       	sbiw	r24, 0x0f	; 15
    1eae:	48 f4       	brcc	.+18     	; 0x1ec2 <__vector_9+0xe0>
	{
		TIM2_overflow_1ms();		//f = 500 Hz
    1eb0:	e1 eb       	ldi	r30, 0xB1	; 177
    1eb2:	f0 e0       	ldi	r31, 0x00	; 0
    1eb4:	80 81       	ld	r24, Z
    1eb6:	8c 7f       	andi	r24, 0xFC	; 252
    1eb8:	80 83       	st	Z, r24
    1eba:	80 81       	ld	r24, Z
    1ebc:	84 60       	ori	r24, 0x04	; 4
    1ebe:	80 83       	st	Z, r24
    1ec0:	0b c0       	rjmp	.+22     	; 0x1ed8 <__vector_9+0xf6>
	}
	else if (freq <= 10)
    1ec2:	6b 30       	cpi	r22, 0x0B	; 11
    1ec4:	71 05       	cpc	r23, r1
    1ec6:	44 f4       	brge	.+16     	; 0x1ed8 <__vector_9+0xf6>
	{
		TIM2_overflow_512us();		//f = 1 kHz
    1ec8:	e1 eb       	ldi	r30, 0xB1	; 177
    1eca:	f0 e0       	ldi	r31, 0x00	; 0
    1ecc:	80 81       	ld	r24, Z
    1ece:	8b 7f       	andi	r24, 0xFB	; 251
    1ed0:	80 83       	st	Z, r24
    1ed2:	80 81       	ld	r24, Z
    1ed4:	83 60       	ori	r24, 0x03	; 3
    1ed6:	80 83       	st	Z, r24
	}

}
    1ed8:	ff 91       	pop	r31
    1eda:	ef 91       	pop	r30
    1edc:	bf 91       	pop	r27
    1ede:	af 91       	pop	r26
    1ee0:	9f 91       	pop	r25
    1ee2:	8f 91       	pop	r24
    1ee4:	7f 91       	pop	r23
    1ee6:	6f 91       	pop	r22
    1ee8:	5f 91       	pop	r21
    1eea:	4f 91       	pop	r20
    1eec:	3f 91       	pop	r19
    1eee:	2f 91       	pop	r18
    1ef0:	0f 90       	pop	r0
    1ef2:	0f be       	out	0x3f, r0	; 63
    1ef4:	0f 90       	pop	r0
    1ef6:	1f 90       	pop	r1
    1ef8:	18 95       	reti

00001efa <__vector_18>:
    /* store buffer index */
    UART_RxTail = tmptail;

    UART_LastRxError = 0;
    return (lastRxError << 8) + data;
}/* uart_getc */
    1efa:	1f 92       	push	r1
    1efc:	0f 92       	push	r0
    1efe:	0f b6       	in	r0, 0x3f	; 63
    1f00:	0f 92       	push	r0
    1f02:	11 24       	eor	r1, r1
    1f04:	2f 93       	push	r18
    1f06:	8f 93       	push	r24
    1f08:	9f 93       	push	r25
    1f0a:	ef 93       	push	r30
    1f0c:	ff 93       	push	r31
    1f0e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    1f12:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1f16:	8c 71       	andi	r24, 0x1C	; 28
    1f18:	e0 91 31 02 	lds	r30, 0x0231	; 0x800231 <UART_RxHead>
    1f1c:	ef 5f       	subi	r30, 0xFF	; 255
    1f1e:	ef 71       	andi	r30, 0x1F	; 31
    1f20:	90 91 30 02 	lds	r25, 0x0230	; 0x800230 <UART_RxTail>
    1f24:	e9 17       	cp	r30, r25
    1f26:	39 f0       	breq	.+14     	; 0x1f36 <__vector_18+0x3c>
    1f28:	e0 93 31 02 	sts	0x0231, r30	; 0x800231 <UART_RxHead>
    1f2c:	f0 e0       	ldi	r31, 0x00	; 0
    1f2e:	ec 5c       	subi	r30, 0xCC	; 204
    1f30:	fd 4f       	sbci	r31, 0xFD	; 253
    1f32:	20 83       	st	Z, r18
    1f34:	01 c0       	rjmp	.+2      	; 0x1f38 <__vector_18+0x3e>
    1f36:	82 e0       	ldi	r24, 0x02	; 2
    1f38:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <UART_LastRxError>
    1f3c:	89 2b       	or	r24, r25
    1f3e:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <UART_LastRxError>
    1f42:	ff 91       	pop	r31
    1f44:	ef 91       	pop	r30
    1f46:	9f 91       	pop	r25
    1f48:	8f 91       	pop	r24
    1f4a:	2f 91       	pop	r18
    1f4c:	0f 90       	pop	r0
    1f4e:	0f be       	out	0x3f, r0	; 63
    1f50:	0f 90       	pop	r0
    1f52:	1f 90       	pop	r1
    1f54:	18 95       	reti

00001f56 <__vector_19>:
    1f56:	1f 92       	push	r1
    1f58:	0f 92       	push	r0
    1f5a:	0f b6       	in	r0, 0x3f	; 63
    1f5c:	0f 92       	push	r0
    1f5e:	11 24       	eor	r1, r1
    1f60:	8f 93       	push	r24
    1f62:	9f 93       	push	r25
    1f64:	ef 93       	push	r30
    1f66:	ff 93       	push	r31
    1f68:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <UART_TxHead>
    1f6c:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <UART_TxTail>
    1f70:	98 17       	cp	r25, r24
    1f72:	69 f0       	breq	.+26     	; 0x1f8e <__vector_19+0x38>
    1f74:	e0 91 32 02 	lds	r30, 0x0232	; 0x800232 <UART_TxTail>
    1f78:	ef 5f       	subi	r30, 0xFF	; 255
    1f7a:	ef 71       	andi	r30, 0x1F	; 31
    1f7c:	e0 93 32 02 	sts	0x0232, r30	; 0x800232 <UART_TxTail>
    1f80:	f0 e0       	ldi	r31, 0x00	; 0
    1f82:	ec 5a       	subi	r30, 0xAC	; 172
    1f84:	fd 4f       	sbci	r31, 0xFD	; 253
    1f86:	80 81       	ld	r24, Z
    1f88:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1f8c:	05 c0       	rjmp	.+10     	; 0x1f98 <__vector_19+0x42>
    1f8e:	e1 ec       	ldi	r30, 0xC1	; 193
    1f90:	f0 e0       	ldi	r31, 0x00	; 0
    1f92:	80 81       	ld	r24, Z
    1f94:	8f 7d       	andi	r24, 0xDF	; 223
    1f96:	80 83       	st	Z, r24
    1f98:	ff 91       	pop	r31
    1f9a:	ef 91       	pop	r30
    1f9c:	9f 91       	pop	r25
    1f9e:	8f 91       	pop	r24
    1fa0:	0f 90       	pop	r0
    1fa2:	0f be       	out	0x3f, r0	; 63
    1fa4:	0f 90       	pop	r0
    1fa6:	1f 90       	pop	r1
    1fa8:	18 95       	reti

00001faa <uart_init>:
    1faa:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <UART_TxHead>
    1fae:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <UART_TxTail>
    1fb2:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <UART_RxHead>
    1fb6:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <UART_RxTail>
    1fba:	99 23       	and	r25, r25
    1fbc:	1c f4       	brge	.+6      	; 0x1fc4 <uart_init+0x1a>
    1fbe:	22 e0       	ldi	r18, 0x02	; 2
    1fc0:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    1fc4:	90 78       	andi	r25, 0x80	; 128
    1fc6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    1fca:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    1fce:	88 e9       	ldi	r24, 0x98	; 152
    1fd0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    1fd4:	86 e0       	ldi	r24, 0x06	; 6
    1fd6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    1fda:	08 95       	ret

00001fdc <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;


    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
    1fdc:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <UART_TxHead>
    1fe0:	2f 5f       	subi	r18, 0xFF	; 255
    1fe2:	2f 71       	andi	r18, 0x1F	; 31

    while (tmphead == UART_TxTail)
    1fe4:	90 91 32 02 	lds	r25, 0x0232	; 0x800232 <UART_TxTail>
    1fe8:	29 17       	cp	r18, r25
    1fea:	e1 f3       	breq	.-8      	; 0x1fe4 <uart_putc+0x8>
    {
        ;/* wait for free space in buffer */
    }

    UART_TxBuf[tmphead] = data;
    1fec:	e2 2f       	mov	r30, r18
    1fee:	f0 e0       	ldi	r31, 0x00	; 0
    1ff0:	ec 5a       	subi	r30, 0xAC	; 172
    1ff2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ff4:	80 83       	st	Z, r24
    UART_TxHead         = tmphead;
    1ff6:	20 93 33 02 	sts	0x0233, r18	; 0x800233 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL |= _BV(UART0_UDRIE);
    1ffa:	e1 ec       	ldi	r30, 0xC1	; 193
    1ffc:	f0 e0       	ldi	r31, 0x00	; 0
    1ffe:	80 81       	ld	r24, Z
    2000:	80 62       	ori	r24, 0x20	; 32
    2002:	80 83       	st	Z, r24
    2004:	08 95       	ret

00002006 <uart_puts>:
 * Purpose:  transmit string to UART
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    2006:	cf 93       	push	r28
    2008:	df 93       	push	r29
    200a:	ec 01       	movw	r28, r24
    while (*s)
    200c:	88 81       	ld	r24, Y
    200e:	88 23       	and	r24, r24
    2010:	31 f0       	breq	.+12     	; 0x201e <uart_puts+0x18>
    2012:	21 96       	adiw	r28, 0x01	; 1
        uart_putc(*s++);
    2014:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <uart_putc>
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    while (*s)
    2018:	89 91       	ld	r24, Y+
    201a:	81 11       	cpse	r24, r1
    201c:	fb cf       	rjmp	.-10     	; 0x2014 <uart_puts+0xe>
        uart_putc(*s++);
}/* uart_puts */
    201e:	df 91       	pop	r29
    2020:	cf 91       	pop	r28
    2022:	08 95       	ret

00002024 <__subsf3>:
    2024:	50 58       	subi	r21, 0x80	; 128

00002026 <__addsf3>:
    2026:	bb 27       	eor	r27, r27
    2028:	aa 27       	eor	r26, r26
    202a:	0e 94 2a 10 	call	0x2054	; 0x2054 <__addsf3x>
    202e:	0c 94 f5 10 	jmp	0x21ea	; 0x21ea <__fp_round>
    2032:	0e 94 e7 10 	call	0x21ce	; 0x21ce <__fp_pscA>
    2036:	38 f0       	brcs	.+14     	; 0x2046 <__addsf3+0x20>
    2038:	0e 94 ee 10 	call	0x21dc	; 0x21dc <__fp_pscB>
    203c:	20 f0       	brcs	.+8      	; 0x2046 <__addsf3+0x20>
    203e:	39 f4       	brne	.+14     	; 0x204e <__addsf3+0x28>
    2040:	9f 3f       	cpi	r25, 0xFF	; 255
    2042:	19 f4       	brne	.+6      	; 0x204a <__addsf3+0x24>
    2044:	26 f4       	brtc	.+8      	; 0x204e <__addsf3+0x28>
    2046:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_nan>
    204a:	0e f4       	brtc	.+2      	; 0x204e <__addsf3+0x28>
    204c:	e0 95       	com	r30
    204e:	e7 fb       	bst	r30, 7
    2050:	0c 94 de 10 	jmp	0x21bc	; 0x21bc <__fp_inf>

00002054 <__addsf3x>:
    2054:	e9 2f       	mov	r30, r25
    2056:	0e 94 06 11 	call	0x220c	; 0x220c <__fp_split3>
    205a:	58 f3       	brcs	.-42     	; 0x2032 <__addsf3+0xc>
    205c:	ba 17       	cp	r27, r26
    205e:	62 07       	cpc	r22, r18
    2060:	73 07       	cpc	r23, r19
    2062:	84 07       	cpc	r24, r20
    2064:	95 07       	cpc	r25, r21
    2066:	20 f0       	brcs	.+8      	; 0x2070 <__addsf3x+0x1c>
    2068:	79 f4       	brne	.+30     	; 0x2088 <__addsf3x+0x34>
    206a:	a6 f5       	brtc	.+104    	; 0x20d4 <__addsf3x+0x80>
    206c:	0c 94 28 11 	jmp	0x2250	; 0x2250 <__fp_zero>
    2070:	0e f4       	brtc	.+2      	; 0x2074 <__addsf3x+0x20>
    2072:	e0 95       	com	r30
    2074:	0b 2e       	mov	r0, r27
    2076:	ba 2f       	mov	r27, r26
    2078:	a0 2d       	mov	r26, r0
    207a:	0b 01       	movw	r0, r22
    207c:	b9 01       	movw	r22, r18
    207e:	90 01       	movw	r18, r0
    2080:	0c 01       	movw	r0, r24
    2082:	ca 01       	movw	r24, r20
    2084:	a0 01       	movw	r20, r0
    2086:	11 24       	eor	r1, r1
    2088:	ff 27       	eor	r31, r31
    208a:	59 1b       	sub	r21, r25
    208c:	99 f0       	breq	.+38     	; 0x20b4 <__addsf3x+0x60>
    208e:	59 3f       	cpi	r21, 0xF9	; 249
    2090:	50 f4       	brcc	.+20     	; 0x20a6 <__addsf3x+0x52>
    2092:	50 3e       	cpi	r21, 0xE0	; 224
    2094:	68 f1       	brcs	.+90     	; 0x20f0 <__addsf3x+0x9c>
    2096:	1a 16       	cp	r1, r26
    2098:	f0 40       	sbci	r31, 0x00	; 0
    209a:	a2 2f       	mov	r26, r18
    209c:	23 2f       	mov	r18, r19
    209e:	34 2f       	mov	r19, r20
    20a0:	44 27       	eor	r20, r20
    20a2:	58 5f       	subi	r21, 0xF8	; 248
    20a4:	f3 cf       	rjmp	.-26     	; 0x208c <__addsf3x+0x38>
    20a6:	46 95       	lsr	r20
    20a8:	37 95       	ror	r19
    20aa:	27 95       	ror	r18
    20ac:	a7 95       	ror	r26
    20ae:	f0 40       	sbci	r31, 0x00	; 0
    20b0:	53 95       	inc	r21
    20b2:	c9 f7       	brne	.-14     	; 0x20a6 <__addsf3x+0x52>
    20b4:	7e f4       	brtc	.+30     	; 0x20d4 <__addsf3x+0x80>
    20b6:	1f 16       	cp	r1, r31
    20b8:	ba 0b       	sbc	r27, r26
    20ba:	62 0b       	sbc	r22, r18
    20bc:	73 0b       	sbc	r23, r19
    20be:	84 0b       	sbc	r24, r20
    20c0:	ba f0       	brmi	.+46     	; 0x20f0 <__addsf3x+0x9c>
    20c2:	91 50       	subi	r25, 0x01	; 1
    20c4:	a1 f0       	breq	.+40     	; 0x20ee <__addsf3x+0x9a>
    20c6:	ff 0f       	add	r31, r31
    20c8:	bb 1f       	adc	r27, r27
    20ca:	66 1f       	adc	r22, r22
    20cc:	77 1f       	adc	r23, r23
    20ce:	88 1f       	adc	r24, r24
    20d0:	c2 f7       	brpl	.-16     	; 0x20c2 <__addsf3x+0x6e>
    20d2:	0e c0       	rjmp	.+28     	; 0x20f0 <__addsf3x+0x9c>
    20d4:	ba 0f       	add	r27, r26
    20d6:	62 1f       	adc	r22, r18
    20d8:	73 1f       	adc	r23, r19
    20da:	84 1f       	adc	r24, r20
    20dc:	48 f4       	brcc	.+18     	; 0x20f0 <__addsf3x+0x9c>
    20de:	87 95       	ror	r24
    20e0:	77 95       	ror	r23
    20e2:	67 95       	ror	r22
    20e4:	b7 95       	ror	r27
    20e6:	f7 95       	ror	r31
    20e8:	9e 3f       	cpi	r25, 0xFE	; 254
    20ea:	08 f0       	brcs	.+2      	; 0x20ee <__addsf3x+0x9a>
    20ec:	b0 cf       	rjmp	.-160    	; 0x204e <__addsf3+0x28>
    20ee:	93 95       	inc	r25
    20f0:	88 0f       	add	r24, r24
    20f2:	08 f0       	brcs	.+2      	; 0x20f6 <__addsf3x+0xa2>
    20f4:	99 27       	eor	r25, r25
    20f6:	ee 0f       	add	r30, r30
    20f8:	97 95       	ror	r25
    20fa:	87 95       	ror	r24
    20fc:	08 95       	ret

000020fe <__cmpsf2>:
    20fe:	0e 94 ba 10 	call	0x2174	; 0x2174 <__fp_cmp>
    2102:	08 f4       	brcc	.+2      	; 0x2106 <__cmpsf2+0x8>
    2104:	81 e0       	ldi	r24, 0x01	; 1
    2106:	08 95       	ret

00002108 <__fixsfsi>:
    2108:	0e 94 8b 10 	call	0x2116	; 0x2116 <__fixunssfsi>
    210c:	68 94       	set
    210e:	b1 11       	cpse	r27, r1
    2110:	0c 94 29 11 	jmp	0x2252	; 0x2252 <__fp_szero>
    2114:	08 95       	ret

00002116 <__fixunssfsi>:
    2116:	0e 94 0e 11 	call	0x221c	; 0x221c <__fp_splitA>
    211a:	88 f0       	brcs	.+34     	; 0x213e <__fixunssfsi+0x28>
    211c:	9f 57       	subi	r25, 0x7F	; 127
    211e:	98 f0       	brcs	.+38     	; 0x2146 <__fixunssfsi+0x30>
    2120:	b9 2f       	mov	r27, r25
    2122:	99 27       	eor	r25, r25
    2124:	b7 51       	subi	r27, 0x17	; 23
    2126:	b0 f0       	brcs	.+44     	; 0x2154 <__fixunssfsi+0x3e>
    2128:	e1 f0       	breq	.+56     	; 0x2162 <__fixunssfsi+0x4c>
    212a:	66 0f       	add	r22, r22
    212c:	77 1f       	adc	r23, r23
    212e:	88 1f       	adc	r24, r24
    2130:	99 1f       	adc	r25, r25
    2132:	1a f0       	brmi	.+6      	; 0x213a <__fixunssfsi+0x24>
    2134:	ba 95       	dec	r27
    2136:	c9 f7       	brne	.-14     	; 0x212a <__fixunssfsi+0x14>
    2138:	14 c0       	rjmp	.+40     	; 0x2162 <__fixunssfsi+0x4c>
    213a:	b1 30       	cpi	r27, 0x01	; 1
    213c:	91 f0       	breq	.+36     	; 0x2162 <__fixunssfsi+0x4c>
    213e:	0e 94 28 11 	call	0x2250	; 0x2250 <__fp_zero>
    2142:	b1 e0       	ldi	r27, 0x01	; 1
    2144:	08 95       	ret
    2146:	0c 94 28 11 	jmp	0x2250	; 0x2250 <__fp_zero>
    214a:	67 2f       	mov	r22, r23
    214c:	78 2f       	mov	r23, r24
    214e:	88 27       	eor	r24, r24
    2150:	b8 5f       	subi	r27, 0xF8	; 248
    2152:	39 f0       	breq	.+14     	; 0x2162 <__fixunssfsi+0x4c>
    2154:	b9 3f       	cpi	r27, 0xF9	; 249
    2156:	cc f3       	brlt	.-14     	; 0x214a <__fixunssfsi+0x34>
    2158:	86 95       	lsr	r24
    215a:	77 95       	ror	r23
    215c:	67 95       	ror	r22
    215e:	b3 95       	inc	r27
    2160:	d9 f7       	brne	.-10     	; 0x2158 <__fixunssfsi+0x42>
    2162:	3e f4       	brtc	.+14     	; 0x2172 <__fixunssfsi+0x5c>
    2164:	90 95       	com	r25
    2166:	80 95       	com	r24
    2168:	70 95       	com	r23
    216a:	61 95       	neg	r22
    216c:	7f 4f       	sbci	r23, 0xFF	; 255
    216e:	8f 4f       	sbci	r24, 0xFF	; 255
    2170:	9f 4f       	sbci	r25, 0xFF	; 255
    2172:	08 95       	ret

00002174 <__fp_cmp>:
    2174:	99 0f       	add	r25, r25
    2176:	00 08       	sbc	r0, r0
    2178:	55 0f       	add	r21, r21
    217a:	aa 0b       	sbc	r26, r26
    217c:	e0 e8       	ldi	r30, 0x80	; 128
    217e:	fe ef       	ldi	r31, 0xFE	; 254
    2180:	16 16       	cp	r1, r22
    2182:	17 06       	cpc	r1, r23
    2184:	e8 07       	cpc	r30, r24
    2186:	f9 07       	cpc	r31, r25
    2188:	c0 f0       	brcs	.+48     	; 0x21ba <__fp_cmp+0x46>
    218a:	12 16       	cp	r1, r18
    218c:	13 06       	cpc	r1, r19
    218e:	e4 07       	cpc	r30, r20
    2190:	f5 07       	cpc	r31, r21
    2192:	98 f0       	brcs	.+38     	; 0x21ba <__fp_cmp+0x46>
    2194:	62 1b       	sub	r22, r18
    2196:	73 0b       	sbc	r23, r19
    2198:	84 0b       	sbc	r24, r20
    219a:	95 0b       	sbc	r25, r21
    219c:	39 f4       	brne	.+14     	; 0x21ac <__fp_cmp+0x38>
    219e:	0a 26       	eor	r0, r26
    21a0:	61 f0       	breq	.+24     	; 0x21ba <__fp_cmp+0x46>
    21a2:	23 2b       	or	r18, r19
    21a4:	24 2b       	or	r18, r20
    21a6:	25 2b       	or	r18, r21
    21a8:	21 f4       	brne	.+8      	; 0x21b2 <__fp_cmp+0x3e>
    21aa:	08 95       	ret
    21ac:	0a 26       	eor	r0, r26
    21ae:	09 f4       	brne	.+2      	; 0x21b2 <__fp_cmp+0x3e>
    21b0:	a1 40       	sbci	r26, 0x01	; 1
    21b2:	a6 95       	lsr	r26
    21b4:	8f ef       	ldi	r24, 0xFF	; 255
    21b6:	81 1d       	adc	r24, r1
    21b8:	81 1d       	adc	r24, r1
    21ba:	08 95       	ret

000021bc <__fp_inf>:
    21bc:	97 f9       	bld	r25, 7
    21be:	9f 67       	ori	r25, 0x7F	; 127
    21c0:	80 e8       	ldi	r24, 0x80	; 128
    21c2:	70 e0       	ldi	r23, 0x00	; 0
    21c4:	60 e0       	ldi	r22, 0x00	; 0
    21c6:	08 95       	ret

000021c8 <__fp_nan>:
    21c8:	9f ef       	ldi	r25, 0xFF	; 255
    21ca:	80 ec       	ldi	r24, 0xC0	; 192
    21cc:	08 95       	ret

000021ce <__fp_pscA>:
    21ce:	00 24       	eor	r0, r0
    21d0:	0a 94       	dec	r0
    21d2:	16 16       	cp	r1, r22
    21d4:	17 06       	cpc	r1, r23
    21d6:	18 06       	cpc	r1, r24
    21d8:	09 06       	cpc	r0, r25
    21da:	08 95       	ret

000021dc <__fp_pscB>:
    21dc:	00 24       	eor	r0, r0
    21de:	0a 94       	dec	r0
    21e0:	12 16       	cp	r1, r18
    21e2:	13 06       	cpc	r1, r19
    21e4:	14 06       	cpc	r1, r20
    21e6:	05 06       	cpc	r0, r21
    21e8:	08 95       	ret

000021ea <__fp_round>:
    21ea:	09 2e       	mov	r0, r25
    21ec:	03 94       	inc	r0
    21ee:	00 0c       	add	r0, r0
    21f0:	11 f4       	brne	.+4      	; 0x21f6 <__fp_round+0xc>
    21f2:	88 23       	and	r24, r24
    21f4:	52 f0       	brmi	.+20     	; 0x220a <__fp_round+0x20>
    21f6:	bb 0f       	add	r27, r27
    21f8:	40 f4       	brcc	.+16     	; 0x220a <__fp_round+0x20>
    21fa:	bf 2b       	or	r27, r31
    21fc:	11 f4       	brne	.+4      	; 0x2202 <__fp_round+0x18>
    21fe:	60 ff       	sbrs	r22, 0
    2200:	04 c0       	rjmp	.+8      	; 0x220a <__fp_round+0x20>
    2202:	6f 5f       	subi	r22, 0xFF	; 255
    2204:	7f 4f       	sbci	r23, 0xFF	; 255
    2206:	8f 4f       	sbci	r24, 0xFF	; 255
    2208:	9f 4f       	sbci	r25, 0xFF	; 255
    220a:	08 95       	ret

0000220c <__fp_split3>:
    220c:	57 fd       	sbrc	r21, 7
    220e:	90 58       	subi	r25, 0x80	; 128
    2210:	44 0f       	add	r20, r20
    2212:	55 1f       	adc	r21, r21
    2214:	59 f0       	breq	.+22     	; 0x222c <__fp_splitA+0x10>
    2216:	5f 3f       	cpi	r21, 0xFF	; 255
    2218:	71 f0       	breq	.+28     	; 0x2236 <__fp_splitA+0x1a>
    221a:	47 95       	ror	r20

0000221c <__fp_splitA>:
    221c:	88 0f       	add	r24, r24
    221e:	97 fb       	bst	r25, 7
    2220:	99 1f       	adc	r25, r25
    2222:	61 f0       	breq	.+24     	; 0x223c <__fp_splitA+0x20>
    2224:	9f 3f       	cpi	r25, 0xFF	; 255
    2226:	79 f0       	breq	.+30     	; 0x2246 <__fp_splitA+0x2a>
    2228:	87 95       	ror	r24
    222a:	08 95       	ret
    222c:	12 16       	cp	r1, r18
    222e:	13 06       	cpc	r1, r19
    2230:	14 06       	cpc	r1, r20
    2232:	55 1f       	adc	r21, r21
    2234:	f2 cf       	rjmp	.-28     	; 0x221a <__fp_split3+0xe>
    2236:	46 95       	lsr	r20
    2238:	f1 df       	rcall	.-30     	; 0x221c <__fp_splitA>
    223a:	08 c0       	rjmp	.+16     	; 0x224c <__fp_splitA+0x30>
    223c:	16 16       	cp	r1, r22
    223e:	17 06       	cpc	r1, r23
    2240:	18 06       	cpc	r1, r24
    2242:	99 1f       	adc	r25, r25
    2244:	f1 cf       	rjmp	.-30     	; 0x2228 <__fp_splitA+0xc>
    2246:	86 95       	lsr	r24
    2248:	71 05       	cpc	r23, r1
    224a:	61 05       	cpc	r22, r1
    224c:	08 94       	sec
    224e:	08 95       	ret

00002250 <__fp_zero>:
    2250:	e8 94       	clt

00002252 <__fp_szero>:
    2252:	bb 27       	eor	r27, r27
    2254:	66 27       	eor	r22, r22
    2256:	77 27       	eor	r23, r23
    2258:	cb 01       	movw	r24, r22
    225a:	97 f9       	bld	r25, 7
    225c:	08 95       	ret

0000225e <__gesf2>:
    225e:	0e 94 ba 10 	call	0x2174	; 0x2174 <__fp_cmp>
    2262:	08 f4       	brcc	.+2      	; 0x2266 <__gesf2+0x8>
    2264:	8f ef       	ldi	r24, 0xFF	; 255
    2266:	08 95       	ret

00002268 <__mulsf3>:
    2268:	0e 94 47 11 	call	0x228e	; 0x228e <__mulsf3x>
    226c:	0c 94 f5 10 	jmp	0x21ea	; 0x21ea <__fp_round>
    2270:	0e 94 e7 10 	call	0x21ce	; 0x21ce <__fp_pscA>
    2274:	38 f0       	brcs	.+14     	; 0x2284 <__mulsf3+0x1c>
    2276:	0e 94 ee 10 	call	0x21dc	; 0x21dc <__fp_pscB>
    227a:	20 f0       	brcs	.+8      	; 0x2284 <__mulsf3+0x1c>
    227c:	95 23       	and	r25, r21
    227e:	11 f0       	breq	.+4      	; 0x2284 <__mulsf3+0x1c>
    2280:	0c 94 de 10 	jmp	0x21bc	; 0x21bc <__fp_inf>
    2284:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_nan>
    2288:	11 24       	eor	r1, r1
    228a:	0c 94 29 11 	jmp	0x2252	; 0x2252 <__fp_szero>

0000228e <__mulsf3x>:
    228e:	0e 94 06 11 	call	0x220c	; 0x220c <__fp_split3>
    2292:	70 f3       	brcs	.-36     	; 0x2270 <__mulsf3+0x8>

00002294 <__mulsf3_pse>:
    2294:	95 9f       	mul	r25, r21
    2296:	c1 f3       	breq	.-16     	; 0x2288 <__mulsf3+0x20>
    2298:	95 0f       	add	r25, r21
    229a:	50 e0       	ldi	r21, 0x00	; 0
    229c:	55 1f       	adc	r21, r21
    229e:	62 9f       	mul	r22, r18
    22a0:	f0 01       	movw	r30, r0
    22a2:	72 9f       	mul	r23, r18
    22a4:	bb 27       	eor	r27, r27
    22a6:	f0 0d       	add	r31, r0
    22a8:	b1 1d       	adc	r27, r1
    22aa:	63 9f       	mul	r22, r19
    22ac:	aa 27       	eor	r26, r26
    22ae:	f0 0d       	add	r31, r0
    22b0:	b1 1d       	adc	r27, r1
    22b2:	aa 1f       	adc	r26, r26
    22b4:	64 9f       	mul	r22, r20
    22b6:	66 27       	eor	r22, r22
    22b8:	b0 0d       	add	r27, r0
    22ba:	a1 1d       	adc	r26, r1
    22bc:	66 1f       	adc	r22, r22
    22be:	82 9f       	mul	r24, r18
    22c0:	22 27       	eor	r18, r18
    22c2:	b0 0d       	add	r27, r0
    22c4:	a1 1d       	adc	r26, r1
    22c6:	62 1f       	adc	r22, r18
    22c8:	73 9f       	mul	r23, r19
    22ca:	b0 0d       	add	r27, r0
    22cc:	a1 1d       	adc	r26, r1
    22ce:	62 1f       	adc	r22, r18
    22d0:	83 9f       	mul	r24, r19
    22d2:	a0 0d       	add	r26, r0
    22d4:	61 1d       	adc	r22, r1
    22d6:	22 1f       	adc	r18, r18
    22d8:	74 9f       	mul	r23, r20
    22da:	33 27       	eor	r19, r19
    22dc:	a0 0d       	add	r26, r0
    22de:	61 1d       	adc	r22, r1
    22e0:	23 1f       	adc	r18, r19
    22e2:	84 9f       	mul	r24, r20
    22e4:	60 0d       	add	r22, r0
    22e6:	21 1d       	adc	r18, r1
    22e8:	82 2f       	mov	r24, r18
    22ea:	76 2f       	mov	r23, r22
    22ec:	6a 2f       	mov	r22, r26
    22ee:	11 24       	eor	r1, r1
    22f0:	9f 57       	subi	r25, 0x7F	; 127
    22f2:	50 40       	sbci	r21, 0x00	; 0
    22f4:	9a f0       	brmi	.+38     	; 0x231c <__mulsf3_pse+0x88>
    22f6:	f1 f0       	breq	.+60     	; 0x2334 <__mulsf3_pse+0xa0>
    22f8:	88 23       	and	r24, r24
    22fa:	4a f0       	brmi	.+18     	; 0x230e <__mulsf3_pse+0x7a>
    22fc:	ee 0f       	add	r30, r30
    22fe:	ff 1f       	adc	r31, r31
    2300:	bb 1f       	adc	r27, r27
    2302:	66 1f       	adc	r22, r22
    2304:	77 1f       	adc	r23, r23
    2306:	88 1f       	adc	r24, r24
    2308:	91 50       	subi	r25, 0x01	; 1
    230a:	50 40       	sbci	r21, 0x00	; 0
    230c:	a9 f7       	brne	.-22     	; 0x22f8 <__mulsf3_pse+0x64>
    230e:	9e 3f       	cpi	r25, 0xFE	; 254
    2310:	51 05       	cpc	r21, r1
    2312:	80 f0       	brcs	.+32     	; 0x2334 <__mulsf3_pse+0xa0>
    2314:	0c 94 de 10 	jmp	0x21bc	; 0x21bc <__fp_inf>
    2318:	0c 94 29 11 	jmp	0x2252	; 0x2252 <__fp_szero>
    231c:	5f 3f       	cpi	r21, 0xFF	; 255
    231e:	e4 f3       	brlt	.-8      	; 0x2318 <__mulsf3_pse+0x84>
    2320:	98 3e       	cpi	r25, 0xE8	; 232
    2322:	d4 f3       	brlt	.-12     	; 0x2318 <__mulsf3_pse+0x84>
    2324:	86 95       	lsr	r24
    2326:	77 95       	ror	r23
    2328:	67 95       	ror	r22
    232a:	b7 95       	ror	r27
    232c:	f7 95       	ror	r31
    232e:	e7 95       	ror	r30
    2330:	9f 5f       	subi	r25, 0xFF	; 255
    2332:	c1 f7       	brne	.-16     	; 0x2324 <__mulsf3_pse+0x90>
    2334:	fe 2b       	or	r31, r30
    2336:	88 0f       	add	r24, r24
    2338:	91 1d       	adc	r25, r1
    233a:	96 95       	lsr	r25
    233c:	87 95       	ror	r24
    233e:	97 f9       	bld	r25, 7
    2340:	08 95       	ret

00002342 <__itoa_ncheck>:
    2342:	bb 27       	eor	r27, r27
    2344:	4a 30       	cpi	r20, 0x0A	; 10
    2346:	31 f4       	brne	.+12     	; 0x2354 <__itoa_ncheck+0x12>
    2348:	99 23       	and	r25, r25
    234a:	22 f4       	brpl	.+8      	; 0x2354 <__itoa_ncheck+0x12>
    234c:	bd e2       	ldi	r27, 0x2D	; 45
    234e:	90 95       	com	r25
    2350:	81 95       	neg	r24
    2352:	9f 4f       	sbci	r25, 0xFF	; 255
    2354:	0c 94 ad 11 	jmp	0x235a	; 0x235a <__utoa_common>

00002358 <__utoa_ncheck>:
    2358:	bb 27       	eor	r27, r27

0000235a <__utoa_common>:
    235a:	fb 01       	movw	r30, r22
    235c:	55 27       	eor	r21, r21
    235e:	aa 27       	eor	r26, r26
    2360:	88 0f       	add	r24, r24
    2362:	99 1f       	adc	r25, r25
    2364:	aa 1f       	adc	r26, r26
    2366:	a4 17       	cp	r26, r20
    2368:	10 f0       	brcs	.+4      	; 0x236e <__utoa_common+0x14>
    236a:	a4 1b       	sub	r26, r20
    236c:	83 95       	inc	r24
    236e:	50 51       	subi	r21, 0x10	; 16
    2370:	b9 f7       	brne	.-18     	; 0x2360 <__utoa_common+0x6>
    2372:	a0 5d       	subi	r26, 0xD0	; 208
    2374:	aa 33       	cpi	r26, 0x3A	; 58
    2376:	08 f0       	brcs	.+2      	; 0x237a <__utoa_common+0x20>
    2378:	a9 5d       	subi	r26, 0xD9	; 217
    237a:	a1 93       	st	Z+, r26
    237c:	00 97       	sbiw	r24, 0x00	; 0
    237e:	79 f7       	brne	.-34     	; 0x235e <__utoa_common+0x4>
    2380:	b1 11       	cpse	r27, r1
    2382:	b1 93       	st	Z+, r27
    2384:	11 92       	st	Z+, r1
    2386:	cb 01       	movw	r24, r22
    2388:	0c 94 c6 11 	jmp	0x238c	; 0x238c <strrev>

0000238c <strrev>:
    238c:	dc 01       	movw	r26, r24
    238e:	fc 01       	movw	r30, r24
    2390:	67 2f       	mov	r22, r23
    2392:	71 91       	ld	r23, Z+
    2394:	77 23       	and	r23, r23
    2396:	e1 f7       	brne	.-8      	; 0x2390 <strrev+0x4>
    2398:	32 97       	sbiw	r30, 0x02	; 2
    239a:	04 c0       	rjmp	.+8      	; 0x23a4 <strrev+0x18>
    239c:	7c 91       	ld	r23, X
    239e:	6d 93       	st	X+, r22
    23a0:	70 83       	st	Z, r23
    23a2:	62 91       	ld	r22, -Z
    23a4:	ae 17       	cp	r26, r30
    23a6:	bf 07       	cpc	r27, r31
    23a8:	c8 f3       	brcs	.-14     	; 0x239c <strrev+0x10>
    23aa:	08 95       	ret

000023ac <_exit>:
    23ac:	f8 94       	cli

000023ae <__stop_program>:
    23ae:	ff cf       	rjmp	.-2      	; 0x23ae <__stop_program>
